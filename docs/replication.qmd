---
title: "Replication Code and Robustness Checks"
subtitle: "The Effects of Shifting Priorities and Capacity on Elected Officials' Policy Work and Constituency Service: Evidence from a Census of Legislator Requests to U.S. Federal Agencies"
format:
    html: 
      toc: true
      code-fold: true
editor_options: 
  chunk_output_type: console
---


```{r global.options, include=FALSE}
library(modelsummary)
library(marginaleffects)
library(fixest)
library(tidyverse)
library(magrittr)
library(knitr)
library(kableExtra)
library(here)
library(ggrepel)

knitr::opts_chunk$set(echo = T, # code is folded 
                      cache = F, # CACHE 
                      fig.width = 4.5, 
                      fig.height = 3.5,
                      split = T,
                      fig.align = 'center', 
                      fig.path='figs/',
                      fig.retina = 6,
                      warning = F, 
                      message = F)

# inline numbers round to 2
knit_hooks$set(inline = function(x) {
  if (is.na(as.numeric(x))) {
    return(x)
    } else
        return(as.numeric(x) |> round(2))
})

# plot defaults 
library(ggplot2); theme_set(
      theme_minimal() + 
        theme(
          # FOR AJPS
          panel.grid = element_blank(),
          legend.position = "bottom",
          # END FOR AJPS 
          panel.border  = element_blank(),
          panel.grid.major.x = element_blank())
                            )
  options(
    ggplot2.continuous.color = "cividis",
    ggplot2.continuous.fill = "cividis"
  )
  scale_color_discrete <- function(...)
    scale_color_viridis_d(..., direction = -1)
  scale_fill_discrete <- function(...)
    scale_fill_viridis_d(..., direction = -1)
  
# html table formatting
kablebox <- . %>%  
  head(100) %>%
  knitr::kable() %>% 
  kable_styling() %>% 
  scroll_box(height = "200px")

kablebox_long <- . %>% 
  head(100) %>% 
  knitr::kable() %>% 
  kable_styling() %>% 
  scroll_box(height = "500px")
```


# Theory 

```{r 2x2-fig, fig.show="hold", echo=FALSE}
#| label: 2x2-fig
#| fig-width: 3.6
#| fig-height: 3.6
#| layout-ncol: 2


# CAPACITY
capacity <- tibble::tibble(
  priority = .2,
  capacity = c(100, NA, NA, NA, NA, 150)
  ) %>% 
  ggplot() +
  aes(x = capacity*priority,
      y = capacity*(1-priority) ,
      label = str_c(capacity*priority, ", ", capacity*(1-priority))) + 
   geom_segment(x = c(0,0,0,0,0,0),
                 xend = c(100, 110, 120,130,140, 150),
                 y = c(100, 110, 120,130,140, 150),
                 yend = c(0,0,0,0,0,0),
              linetype = 1,
              alpha = c(.1,.2,.4,.6,.8,1)) + 
    geom_point(alpha = c(.5, 1,1,1,1,1) ) +
  geom_segment(x = 100*.2, 
           y = 100*.8,
           xend = 148*.2, 
           yend = 148*.8,
           arrow = arrow(type = "closed", length = unit(.1, "in")),
           color = "blue") + 
  annotate("text", 
          label = "50% increase in capacity while maintaining\na 80:20 ratio of constituency service to\npolicy work (80% constituency service)", 
           x = 150*.2, 
           y = 150*.8,
          hjust = -.01,
          vjust = -.1,
          color = "black",
          size = 3) +
  geom_label(x = 0, 
             y = c(100, 110, 120,130,140, 150), 
             label = c("1x", NA, NA, NA, NA, "1.5x"),
             size = 3,
             hjust = .44 ) + 
    scale_y_continuous(breaks = seq(0, 140, by = 20), limits = c(0, 150)) + 
  scale_x_continuous(breaks = seq(0, 140, by = 20), limits = c(0, 150)) + 
  labs(title = "",
       x = "Volume of policy work",
       y = "Volume of constituency service") + 
  theme(legend.position = "", 
        panel.grid.minor = element_blank() )




# PRIORITY 
priority <- tibble::tibble(
  priority = c(.2, .4),
  capacity = c(100) 
  ) %>% 
  mutate(
    x = capacity*priority,
      y = capacity*(1-priority)
  ) %>% 
  ggplot() +
  aes(x = x,
      y = y ) + 
        geom_segment(x = c(0),
                 xend = c(100),
                 y = c(100),
                 yend = c(0),
              linetype = 1,
              alpha = c(.1)) +
   stat_function(fun =  ~ 4*.x , geom = "line", linetype = 2, alpha = .1) +
     stat_function(fun =  ~ 3.5*.x , geom = "line", linetype = 2, alpha = .2) +
   stat_function(fun =  ~ 3*.x , geom = "line", linetype = 2, alpha = .4) +
   stat_function(fun =  ~ 2.5*.x , geom = "line", linetype = 2, alpha = .6) +
   stat_function(fun =  ~ 2*.x , geom = "line", linetype = 2, alpha = .8) +
   stat_function(fun =  ~ 1.5*.x , geom = "line", linetype = 2, alpha = 1) +
  geom_point(alpha = c(.5,1) ) +
  geom_segment(x = 100*.2, 
           y = 100*.8,
           xend = 100*.4, 
           yend = 100*.6,
           arrow = arrow(type = "closed", length = unit(.1, "in")),
           color = "blue") + 
  annotate("text", 
          label = "Shifting priority toward policy work\nwithout increasing capacity", 
           x = 100*.4, 
           y = 100*.6,
          hjust = -.01,
          vjust = 1.1,
          color = "black",
          size = 3) +
  geom_label(aes(x = 150*c(.24, .66),
                 y = 150 ),
             label = c("80:20", "60:40"),
          size = 3) + 
  scale_y_continuous(breaks = seq(0, 140, by = 20), limits = c(0, 150)) + 
  scale_x_continuous(breaks = seq(0, 140, by = 20), limits = c(0, 150)) + 
  #scale_color_gradient(low = "grey", high = "black") +
  labs(title = "",
       x = "Volume of policy work",
       y = "Volume of constituency service") +
  theme(legend.position = "",         
        #panel.grid.major = element_blank(),
        panel.grid.minor = element_blank() )



# BOTH  
both <- tibble::tibble(
  priority = c(.2, .4),
  capacity = c(100, 150) 
  ) %>% 
  mutate(
    x = capacity*priority,
      y = capacity*(1-priority)
  ) %>% 
  ggplot() +
  aes(x = x,
      y = y ) + 
      geom_segment(x = c(0, 0),
                 xend = c(100,150),
                 y = c(100, 150),
                 yend = c(0,0),
              linetype = 1,
              alpha = c(.1, 1)) +
   stat_function(fun =  ~ 4*.x , geom = "line", linetype = 2, alpha = .1) +
   stat_function(fun =  ~ 1.5*.x , geom = "line", linetype = 2, alpha = 1) +
  geom_label(aes(x = 150*c(.24, .66),
                 y = 150 ),
             label = c("80:20", "60:40"),
          size = 3) + 
    geom_point(alpha = c(.5,1) ) +
  geom_segment(x = 100*.2, 
           y = 100*.8,
           xend = 148*.4, 
           yend = 149*.6,
           arrow = arrow(type = "closed", length = unit(.1, "in")),
           color = "blue") + 
  annotate("text", 
          label = "Shifting priority toward policy work\n AND increasing capacity by 50%", 
           x = 150*.4, 
           y = 150*.6,
          hjust = .06,
          vjust = -.5,
          color = "black",
          size = 3) +
    geom_label(x = 0, y = c(100, 150), 
             label = c("1x", "1.5x"),
             size = 3,hjust = .44) + 
  scale_y_continuous(breaks = seq(0, 140, by = 20), limits = c(0, 150)) + 
  scale_x_continuous(breaks = seq(0, 140, by = 20), limits = c(0, 150)) + 
  #scale_color_gradient(low = "grey", high = "black") +
  labs(title = "",
       x = "Volume of policy work",
       y = "Volume of constituency service") + 
  theme(legend.position = "",          panel.grid.minor = element_blank() )



# Regions   
more_c <- tibble(x = c(0, 20, 37.5,0),
       y = c(100, 80, 150,150) ) %>% 
  mutate(label = "A")

less_c <- tibble(x = c(0, 20, 0,0),
       y = c(0, 80, 80, 0) ) %>% 
  mutate(label = "D")


more_p <- tibble(x = c(19.8, 37.5, 150, 150),
       y = c(79, 150, 150, 79) ) %>% 
  mutate(label = "B")

less_p <- tibble(x = c(100, 21, 150, 150),
       y = c(0, 79, 79, 0) ) %>% 
  mutate(label = "C")


# REGIONS 
regions <- more_p %>%
 full_join( less_p) %>% #full_join(more_c) %>% 
  group_by(label) %>% 
  mutate(mean_x = mean(x),
         mean_y = mean(y),
         name = label %>% 
           str_replace("B", #"c_{i1}p_{i1} > c_{i2}p_{i2}" #FIXME 
                       "The effect of increasing capacity is large\nenough that levels of constituency service\nare maintained or increase, even as\nelected officials prioritize policy work."
                       ) %>% 
           str_replace("C", "Shifting priorities toward policy\ncauses less constituency service"
           #expression("$c_{i1}p_{i1} > c_{i2}p_{i2}$" #FIXME 
           )
         ) %>% 
  ungroup() %>% 
ggplot() +
  aes(x = x,
      y = y,
      fill = label,
      label = name) + 
  geom_polygon( alpha = .5) + 
    geom_segment(x = 0,
                 xend = 100,
                 y = 100,
                 yend = 0,
              linetype = 1,
              alpha = c(.01)) +
     stat_function(fun =  ~ 4*.x , geom = "line", linetype = 2, alpha = .1) +
  geom_point(x = 20, y = 80, alpha = .5, color = "grey") + 
  scale_fill_grey() +
  scale_y_continuous(breaks = seq(0, 140, by = 20), limits = c(0, 150)) + 
  scale_x_continuous(breaks = seq(0, 140, by = 20), limits = c(0, 150)) + 
  geom_text(aes(x = mean_x, y = mean_y), 
            check_overlap = T, 
            #parse = T,
          size = 3,
          vjust =.5) + 
  labs(title = "",
       x = "Volume of policy work",
       y = "Volume of constituency service") + 
  theme(legend.position = "",          panel.grid.minor = element_blank() )


capacity  
priority 
both  
regions


```


# Replication data

<!--OLD 
From `code/replication_data.R`, which starts with the main replication data file of annual member-agency-year level counts (`dcounts_min.Rdata`) and makes transformations for three sets of models: 

1. counts per member-agency-year (dcounts_tenure.Rdata) <!--/AgencyComm.dta-- 
2. ratio per member-year (dcounts_ratio.Rdata) <!--/ProportionContact.dta)--
3. counts per district-year (dcounts_per_district.Rdata) <!--, DistrictLevel.dta)-- 

(The spillover models use #3)

<!--The same three datasets are used in Replication.do--> 

```{r data-old, eval=FALSE}
load(here::here("data", "dcounts_tenure.Rdata"))
load(here::here("data", "dcounts_ratio.Rdata"))
load(here::here("data", "dcounts_per_district.Rdata"))
load(here::here("data", "members.Rdata"))
```


```{r data}
load(here::here("data", "corr_counts.Rdata"))
load(here::here("data", "members.Rdata"))

member_data <- members |>
  ungroup() |> 
  distinct( congress, chamber,
           bioname, last_name, 
           icpsr, cqlabel, district_code,
           state_abbrev, state, district_code, pop2010, 
           committees, chair, ranking_minority, 
           majority, presidents_party, party,
           yearelected) |>
  group_by(icpsr) |>
  mutate(first_cong = min(congress),
         first_year = 1787 + 2*first_cong)


#FIXME two names for the same data in this script 
members <- member_data
```


```{r data-transformations}
# This chunk takes the minimal master data files and creates member and district-level yearly count and ratio data 
# These data files are then used to estimate the models in replication.qmd
# the key DVs are
# - perYear = counts per year (member level and district level)
# - ratio = ratio of policy work to constituency service 

testing = F

## just in case it was saved as grouped data 
corr_counts %<>% ungroup()

corr_counts %<>% mutate( icpsr_year = paste(icpsr, year, sep='_') )

## chamber switchers  in original data (party switchers are not an issue because they net new ICPSR ids)
chamber_switchers <- corr_counts |> 
  distinct(icpsr_year, agency, chamber) |>
  add_count(icpsr_year, agency,  #party, 
            name = "n") |>
  filter(n > 1) |> 
  distinct(icpsr_year, chamber) |> 
  arrange(icpsr_year)

# DROP CHAMBER SWITCHERS
corr_counts %<>% filter(!icpsr_year %in% chamber_switchers$icpsr_year)

############################
# CREATE COUNTS for models #
############################

##creating the member-level aggregate count variables

# TOTAL counts 
d <- corr_counts |>
  group_by(agency, icpsr, chamber,
           year) |>
  summarise(perYear = sum(per_icpsr_chamber_year_agency_type)) |> 
  ungroup()

# names(d)

# Constituent counts 
d_con <- corr_counts |>
  subset(TYPE %in% c(1, 2, 3)) |> 
  group_by(agency, icpsr, chamber, year) |>
  summarise(perYear_con = sum(per_icpsr_chamber_year_agency_type))

# Policy counts 
d_policy <- corr_counts |>
  subset(TYPE %in% c(4, 5)) |> 
  group_by(agency, icpsr, chamber, year) |>
  summarise(perYear_pol = sum(per_icpsr_chamber_year_agency_type))

d$perYear_con <- d_con$perYear_con
d$perYear_policy<- d_policy$perYear_pol

# congress year converters 
congress_years<- function(congress){
  years<- c(congress*2 + 1787, congress*2 + 1788 )
  return(years)
}

year_congress<- function(year){
  return(floor((year - 1787)/2))
}

# make congress to merge with member data 
d$congress<- year_congress(d$year)

# inspect duplicates 
d <- d |> 
  ungroup() |>
  distinct() |>
  add_count(icpsr, year, agency,  #party, 
            name = "n") 

if(testing){
d |>filter(n > 1) |> distinct(icpsr, year) 
} 

# LEFT join in member data 
d <- d |>  
  ungroup() |> 
  left_join(member_data, 
            by = c('congress', 'icpsr', "chamber") ) 


## count or repeated values (chamber and party switchers)
# note that in the full data, we use the dates of letters to attribute them to the proper party or chamber at the time
# but in yearly counts, we lose this level of detail, leading to undercounts for switchers
d <- d |> 
  ungroup() |>
  distinct() |>
  add_count(icpsr, year, agency,  #party, 
            name = "n") 

# # inspect for duplicates 
if(testing){
d |>filter(n > 1) |> distinct(icpsr, year) 
}


####################
# TRANSFORMATIONS #  
###################

# tenure for experience tests 
d <- d |> 
  group_by(icpsr) |>
  mutate(
    tenure = year - first_year,
    first = ifelse(tenure==0, 1, 0),
    second = ifelse(tenure==1, 1, 0),
    third = ifelse(tenure==2, 1, 0),
    fourth = ifelse(tenure==3, 1, 0),
    fifth = ifelse(tenure==4, 1, 0),
    sixth = ifelse(tenure==5, 1, 0),
    max_year = max(tenure)
  ) 

# fixed effects 
d <- d |> 
  ungroup() |> 
  mutate(
    icpsr_agency = paste(agency, icpsr, sep='_'),
    agency_year = paste(agency, year, sep='_')
  )

# indicator for whether they survived their first election 
d <- d |> 
  mutate(survive = ifelse(
    chamber =='House' & max_year>1 | chamber=='Senate' & max_year>5,
    1, 0)
  )

dcounts_tenure <- d

#########
# RATIO # 
#########  

##  the ratio variable - at the legislator-year level 
## (not the legislator-year-agency level like above)
dcounts_ratio  <- d |>
  ungroup() |> 
  # variables for ratio models 
  group_by(year, icpsr, chamber,
           chair, ranking_minority,  
           majority, presidents_party,
           first, second, third, fourth, fifth, sixth)  |>
  summarise(perCon = sum(perYear_con), 
            perPol = sum(perYear_policy)) |>
  mutate(ratio = perCon/(perCon + perPol))

#### PER DISTRICT COUNTS ######################
d %<>% mutate(decade = case_when(
  year < 2011 ~ '0', 
  year > 2010 ~ '1'))


d %<>% mutate(state_dist = case_when(
  chamber=='Senate'~ paste(state,district_code,  sep='_' ),
  chamber =='House'~ paste(paste(state, district_code, sep='_'), decade, sep='_')
))


dcounts_per_district<- d |>
  group_by(year, state_dist, icpsr, chamber, 
           tenure, first, second, third, fourth, fifth, sixth,
           state) |>
  summarise(perYear = sum(perYear),
            perYear_con = sum(perYear_con),
            perYear_policy = sum(perYear_policy)) |>
  distinct()

# FIXME this can be simplified, in the models they really should be the same 
dcounts_per_district %<>% 
  mutate(new_member = first,
         second_year = second,
         third_year = third,
         fourth_year = fourth,
         fifth_year = fifth,
         sixth_year = sixth
  )
```



```{r means}
mean_total <- mean(dcounts_tenure$perYear)
mean_con <- mean(dcounts_tenure$perYear_con)
mean_pol <- mean(dcounts_tenure$perYear_policy)

save(mean_total, mean_con, mean_pol,
     file = here::here("data", "means.Rdata"))
```


# Defining Prestige Committees

All of these findings replicate with various interpretations of "prestige" committees. To measure committee prestige, we use a revealed preference
    approach--what do members think is most valuable--using party
    rules/norms that limit members to serving on only one of a small
    number of desirable committees. For House members, the "exclusive"
    committees are: Appropriations, Energy & Commerce, Financial
    Services, Rules, and Ways & Means (CRS 2022). For Senators, the
    exclusive (also called "Super A") Committees are: Appropriations,
    Armed Services, Finance, and Foreign Relations (CRS 2024).

```{r prestige}
# Old version of prestige committee definition in original submission 
prestige_houseOLD <- c(
  "APPROPRIATIONS", #
  "ARMED SERVICES", #
  "BUDGET", # 
  # "COMMERCE", #
  # "ENERGY", #
  # "FINANCIAL SERVICES", # 
    # "BANKING", # 
  #"FOREIGN"
    #"INTERNATIONAL RELATIONS", # 
  # "JUDICIARY", # 
    # "FINANCIAL SERVICES", # 
    "RULES", #
  "WAYS"
  ) %>% paste(collapse  = "|")# 

prestige_senateOLD <- c(
   #"AGRICULTURE", 
   "APPROPRIATIONS", #
  "ARMED SERVICES", #
  #  "BANKING", # 
  "BUDGET", # 
  "COMMERCE", #
  #"ENERGY", #
  #  "NATURAL RESOURCES", # 
  #  "ENVIRONMENT", # 
  #  "FINANCE", #
  "FOREIGN RELATIONS", # 
  #"HOMELAND SECURITY", #
  #"JUDICIARY", # 
  # "INTELLIGENCE",
  "RULES") %>% paste(collapse  = "|")#

# REVIEWER 2's Proposed Prestige Committees 
prestige_houseR2 <- c(
  "APPROPRIATIONS", #
  "ARMED SERVICES", #
  #"BUDGET", # 
  # "COMMERCE", #
  # "ENERGY", #
  "FINANCIAL SERVICES", # 
  "BANKING", # 
  #"FOREIGN"
    #"INTERNATIONAL RELATIONS", # 
  "JUDICIARY", # 
    # "FINANCIAL SERVICES", # 
    "RULES", #
  "WAYS"
  ) %>% paste(collapse  = "|")# 

prestige_senateR2 <- c(
   #"AGRICULTURE", 
   "APPROPRIATIONS", #
  "ARMED SERVICES", #
  #  "BANKING", # 
  # "BUDGET", # 
  "COMMERCE", #
  #"ENERGY", #
  #  "NATURAL RESOURCES", # 
  #  "ENVIRONMENT", # 
  #  "FINANCE", #
  "FOREIGN RELATIONS", # 
  #"HOMELAND SECURITY", #
  "JUDICIARY") %>% paste(collapse  = "|")# 
  # "INTELLIGENCE",
  #"RULES") #

# THE BETTER DEFINITION WE USE IN THE FINAL PAPER 
prestige_house <- c(
  "APPROPRIATIONS", #
  # "ARMED SERVICES", #
  #"BUDGET", # 
  "COMMERCE", #
  "ENERGY", #
  "FINANCIAL SERVICES", # 
  "BANKING", # 
  #"FOREIGN"
    #"INTERNATIONAL RELATIONS", # 
  # "JUDICIARY", # 
    "FINANCIAL SERVICES", # 
    "RULES", #
  "WAYS"
  ) %>% paste(collapse  = "|")# 

prestige_senate <- c(
   #"AGRICULTURE", 
   "APPROPRIATIONS", #
  "ARMED SERVICES", #
  #  "BANKING", # 
  #"BUDGET", # 
  #"COMMERCE", #
  #"ENERGY", #
  #  "NATURAL RESOURCES", # 
  #  "ENVIRONMENT", # 
   "FINANCE", #
  "FOREIGN RELATIONS") %>% paste(collapse  = "|")
  #"HOMELAND SECURITY", #
  #"JUDICIARY", # 
  # "INTELLIGENCE",
  #"RULES") #

prestige_house |> str_split("\\|") |> kable(col.names = "House `Exclusive` Prestige Committees (CRS 2022, pg 3)")
prestige_senate |> str_split("\\|") |> kable(col.names = "Senate `Super A` Prestige Committees  (CRS 2022, pg 3)")



members %<>% ungroup() %>% 
  mutate(prestigeOLD = ifelse(
                      (chamber == "House" & str_detect(committees, prestige_houseOLD) ) | (chamber == "Senate" & str_detect(committees, prestige_senateOLD)), 1, 0),
                    prestigeR2 = ifelse(
                      (chamber == "House" & str_detect(committees, prestige_houseR2) ) | (chamber == "Senate" & str_detect(committees, prestige_senateR2)), 1, 0),
                    prestige = ifelse(
                      (chamber == "House" & str_detect(committees, prestige_house) ) | (chamber == "Senate" & str_detect(committees, prestige_senate)), 1, 0)
                    )

# INSPECT 
members |> drop_na(prestige) |> count(prestige) |> kable()

# Join prestige coding into main data 
dcounts_tenure %<>% left_join(members %>% distinct(icpsr, congress, prestige))

dcounts_ratio %<>% left_join(members %>% distinct(icpsr, congress, prestige))


n_agency <- dcounts_tenure$agency |> unique() |> length()
```

# Descriptives

```{r}
# check N
dcounts_tenure %>% tally(perYear, name = "Member-Level Observations") |> kable()
# dcounts_ratio %>% tally(perCon) |> kable()
# dcounts_ratio %>% tally(perPol) |> kable()
dcounts_per_district %>% ungroup %>%  tally(perYear, name = "District-Level Observations") |> kable()

# check n per year 
dcounts_tenure %>% filter(year > 2006) %>%  group_by(year) %>% tally(perYear) |> kablebox_long()

# average per member
dcounts_tenure %>% left_join(members %>% distinct(bioname, icpsr)) %>%
  group_by(bioname, year) %>% 
  summarise(perYear = sum(perYear)) %>% 
  group_by(bioname) %>% 
  summarise(average_per_year = mean(perYear), average_per_year) |> 
  arrange(-average_per_year) |> 
  kablebox()

# average per member per agency 
dcounts_tenure %>% left_join(members %>% select(bioname, icpsr)) %>%
  group_by(bioname) %>% 
  summarise(average_per_year_per_agency = mean(perYear)) |> arrange(-average_per_year_per_agency) |> 
  kablebox()


# per member per agency 
dcounts_tenure %>% left_join(members %>% distinct(bioname, icpsr)) %>%
  group_by(bioname, agency) %>% 
  summarise(per_year_per_agency = perYear) |> arrange(-per_year_per_agency) |> 
  kablebox()



# mean 
perYear_mean1 <- dcounts_tenure$perYear |> mean()
perYear_mean1
perYear_mean2 <- dcounts_tenure |> 
  group_by(icpsr, year) |> 
  transmute(perYearTotal = sum(perYear))
perYear_mean2 <- mean(perYear_mean2$perYearTotal) |> round()



# Better variable names for tables
dcounts_tenure %<>% 
  mutate(Legislator = icpsr,
         Legislator_x_Agency = icpsr_agency,
         Year_x_Agency = agency_year)

# total per agency
dcounts_tenure %>% group_by(agency) %>% summarise(n = perYear %>% sum()) %>% arrange(-n) %>% kablebox()

# total per legislator-agency pair 
dcounts_tenure %>% group_by(Legislator_x_Agency) %>% summarise(n = perYear %>% sum()) %>% arrange(-n) %>% kablebox()
```

### Gini coefficients 

```{r gini}
library(ineq)
gini <- dcounts_tenure |> 
  ungroup() |> 
  group_by(year, chamber) |> 
  summarise(gini = round(Gini(perYear),2)) |>
  arrange(- year) |> 
  filter(year > 2006) 

gini|> 
  kablebox()

gini |> 
  ggplot() +
  aes( x = year, y = gini, color = chamber) + 
  geom_point() + 
  geom_smooth(method = "lm")

gini2 <- dcounts_tenure |> 
  filter(perYear > 0) |> 
  ungroup() |> 
  group_by(year, chamber) |> 
  summarise(gini = round(Gini(perYear),2)) |>
  arrange(- year) |> 
  filter(year > 2006) 

gini2|> 
  kablebox()

gini2 |> 
  ggplot() +
  aes( x = year, y = gini, color = chamber) + 
  geom_point() + 
  geom_smooth(method = "lm")
```

In 2023, Columbia had the highest income inequality Gini coefficient at .55. 

https://ourworldindata.org/what-is-the-gini-coefficient

(The Gini coefficient for House campaign spending in 2016 was .29).  


## Values for Predictions

The most frequent legislator agency pair: McCain x VA with 2159 letters!

The average is  `r perYear_mean2` letters per legislator per year, `r perYear_mean1` letters per agency per year.
For predictions, we need an average member-year-agency triad. The first table below shows the members who averaged  `r perYear_mean2`, entered Congress between 2007 and 2011, were observed in our data for at least seven years, and most often submitted exactly one letter to an agency (the closest integer  `r perYear_mean2` ). For realism, this person would ideally become a chair at some point in our data. 



Of the modal legislators, 
John Barrasso and
Phil Roe 
meet this last criterion. However, whereas Barrasso's seat was always held by a Republican, Roe's seat flipped, adding realism to our predictions from models that include whether a legislator is replacing a co-partisan or not. 
Roe entered in 2009 and became a chair in 2017.
The IRS is a fairly modal agency, so predictions are Phil Roe X Treasury IRS X 2015. 
Other legislators, years, and agencies are simply intercept shifts. 


```{r values, fig.width=5, fig.height=3}
modal <- dcounts_tenure %>% 
  group_by(icpsr) %>% 
  filter(first_year > 2006, first_year < 2013, max_year > 6) %>% 
  mutate(Chair = sum(chair, na.rm = T) >1) %>% 
  group_by(icpsr, year) %>%
  mutate(perLeg = sum(perYear)) %>% 
  filter(perYear == 1, perLeg == perYear_mean2  ) %>% #FIXME MAKE THIS VARIABLE 
  select(perAgency = perYear, perLeg, icpsr, icpsr_agency, agency_year, first_year, max_year, Chair) %>% 
  distinct() %>% 
  ungroup() %>% left_join(members %>% select(bioname, icpsr))

modal %>%
  mutate(average = perLeg) %>% 
  count(average, bioname, first_year, max_year, Chair, sort = T, name = "agency_year_count == 1") %>% 
  distinct() %>%
  kablebox()

modal %<>% filter(Chair) %>% distinct()

modal %>%
  kablebox()

dcounts_tenure %>% 
  group_by(icpsr, year) %>% 
  mutate(perYearTotal = sum(perYear)) %>%
  #mutate (perLegislator = sum(perYear)) %>% 
  ungroup() %>% 
  mutate(meanLeg = mean(perYearTotal),
         meanYear = mean(perYear)) %>%
  filter( abs(perYearTotal - perYear_mean2) < 10,   
          perYear < 10 )  %>% 
  ggplot() +
  aes(x = perYear, y = perYearTotal) + 
    geom_jitter() + 
  geom_vline(aes(xintercept = meanYear), color = "blue") + 
  geom_hline(aes(yintercept = meanLeg), color = "blue") + 
  geom_text_repel(aes(label = ifelse(icpsr_agency %in% modal$icpsr_agency & agency_year %in% modal$agency_year , icpsr_agency, NA) ),
                  color = "red", box.padding = 0.5, max.overlaps = Inf) + 
  labs(x = "Contacts per Legislator per Agency per year",
       y = "Contacts per Legislator per year")

modal %>%
  distinct(perAgency, bioname, icpsr_agency, agency_year) %>% 
  kablebox()

## other variable means
# dcounts_tenure %>% summarise(across(everything(), mean_or_mode)) %>% kablebox()

# by chair and President's party
values <- tidyr::expand(dcounts_tenure,
                        agency = "Treasury_IRS",
                        chair = chair, 
                        ranking_minority	= FALSE, 
                        prestige = TRUE, 
                        first = FALSE,
                        second = FALSE,
                        third = FALSE,
                        fourth = FALSE,
                        fifth = FALSE, 
                        sixth = FALSE,
                        Legislator_x_Agency = "Treasury_IRS_20947",
                        Year_x_Agency = "Treasury_IRS_2015",
                        Legislator = "20947",
                        Year = "2015",
                        majority = TRUE,
                        presidents_party = presidents_party
                   ) %>% 
  drop_na(majority, chair)

# by year 
values_tenure <- tidyr::expand(dcounts_tenure,
                        agency = "Treasury_IRS",
                        chair = chair, 
                        ranking_minority	= FALSE, 
                        prestige = TRUE, 
                        first = first,
                        second = second,
                        third = third,
                        fourth = fourth,
                        fifth = fifth, 
                        sixth = sixth,
                        Legislator_x_Agency = "Treasury_IRS_20947",
                        Year_x_Agency = "Treasury_IRS_2015",
                        Legislator = "20947",
                        Year = "2015",
                        majority = TRUE,
                        presidents_party = TRUE
                   ) %>% 
  drop_na(chair)
```


```{r}
# helper functions to plot predicted values
ggchair <- function(predicted = predicted) {
  
  predicted$chair %<>% str_replace("0", " Not\nchair") %>% str_replace("1", "Chair")
  
  predicted$presidents_party %<>% str_replace("0", "Not President's\nparty") %>% str_replace("1", "President's\nparty")

predicted %>%  
  ggplot() + 
  aes(x = presidents_party, 
      y = estimate, # predicted, 
      ymin = conf.low,# predicted - 1.96*std.error,
      ymax = conf.high, #predicted + 1.96*std.error,
      fill = chair,
      shape = chair,
      color = chair,
      label = chair,
      ) + 
      geom_text_repel(direction = "y", size = 3, 
                      hjust= -.25, 
                      min.segment.length = Inf, 
                      force = 2,
                      vjust = 0, 
                      check_overlap = T) + 
  geom_pointrange(position =  position_dodge(width = -.1)  )  + 
  scale_fill_viridis_d(begin = 0, end = .6, option = "cividis") +
  scale_color_viridis_d(begin = 0, end = .6, option = "cividis") +
  theme(legend.position = "none")
}


ggtenure <- function(predicted = predicted) {
  
predicted %<>%
  # drop estimates from impossible values
      group_by(rowid, 
               #predicted, std.error, 
               estimate, conf.low, conf.high,
               chair) %>% 
  mutate(sum = sum(first, second, third, fourth, fifth, sixth),
         more = ifelse(sum == 0, 1,0)) %>% 
    filter(sum < 2) %>% 
    pivot_longer(cols = c("first", "second", "third", "fourth", "fifth", "sixth", "more")) %>% 
    select(name, value) %>% 
    filter(value == 1) %>% 
    # clean up for presentation
    mutate(year_in_congress = name %>% 
             str_replace("more", "7\nor more") %>% 
             str_replace("sixth", "6") %>% 
             str_replace("fifth", "5") %>% 
             str_replace("fourth", "4") %>% 
             str_replace("third", "3") %>% 
             str_replace("second", "2") %>% 
             str_replace("first", "1") 
             ) %>% 
    ungroup()
  
# Ideally, we could plot against data, but there is so much variation that you can no longer distinguish differences in predicted values 
# predicted %<>% full_join(dcounts_tenure2 %>% mutate(predicted = NA))
  
predicted %<>% filter(chair == 0 | name %in% c("sixth", "more"))

  predicted$chair %<>% str_replace("0", " Not\nchair") %>% str_replace("1", "Chair")
  

predicted %>%  
  ungroup() %>% 
  ggplot() + 
  aes(x = year_in_congress, 
            y = estimate, # predicted, 
      ymin = conf.low,# predicted - 1.96*std.error,
      ymax = conf.high, #predicted + 1.96*std.error,
      shape = chair,
      color = chair,
      label = ifelse(year_in_congress == "6", chair, NA) ) + 
    geom_text_repel(direction = "y", size = 3,
                    min.segment.length = Inf,
                    hjust= -.15, 
                    check_overlap = T) + 
  geom_pointrange(position =  position_dodge(width = -.3)  )  + 
  scale_fill_viridis_d(begin = 0, end = .6, option = "cividis") +
  scale_color_viridis_d(begin = 0, end = .6, option = "cividis")  +
  theme(legend.position = "none")
}

```

---

# Counts per member per year

Clustering standard errors at the legislator level:

["Clustering on the panel variable produces an estimator of the VCE that is robust to cross-sectional heteroskedasticity and within-panel (serial) correlation that is asymptotically equivalent to that proposed by Arellano (1987)"](https://www.stata.com/manuals13/xtxtreg.pdf)

We use `fixest::feglm` here and replicated the main models using `xtreg` in Replication.do.
See more about how robust (clustered) standard errors with fixed effects are calculated by `fixest` [here](https://lrberge.github.io/fixest/articles/standard_errors.html) and by  `xtreg` [here](https://www.stata.com/manuals13/xtxtreg.pdf).

```{r cm}
# directory to store model objects 
if (!dir.exists(here::here("models"))) {dir.create(here::here("models"))}


# Coef Map
cm = c("chair" = "Committee Chair",
       "ranking_minority" = "Ranking Member",
              "prestigeR2" = "Prestige Committee (R2)",
                     "prestigeOLD" = "Prestige Committee (Old)",
       "prestige" = "Prestige Committee",
       "first" = "First Year",
       "second" = "Second Year",
       "third" = "Third Year",
       "fourth" = "Fourth Year",
       "fifth" = "Fifth Year",
       "sixth" = "Sixth Year",
               "same_party:second_year" = "Second Year x Same Party",
       "same_party:third_year" = "Third Year x Same Party",
       "same_party:fourth_year" = "Fourth Year x Same Party",
       "same_party:fifth_year" = "Fifth Year x Same Party",
       "same_party:sixth_year" = "Sixth Year x Same Party",
        "second_year" = "Second Year",
       "third_year" = "Third Year",
        "fourth_year" = "Fourth Year",
        "fifth_year" = "Fifth Year",
        "sixth_year" = "Sixth Year",
       "new_member" = "New Member", 
       "new_senator" = " New Senator in Delegation",
       "new_one" = " New Member in Delegation",
              "new_proportion" = " New Proportion in Delegation",
       "new_member:same_party" = " New Member x Same Party", 
       "same_party" = "Same Party",
       "majority" = "Majority",
       "presidents_party" = "President's party",
       "Legislator" = "Legislator", 
       "Agency" = "Agency",
       # FIXED EFFECTS FORMATTED BY GM
       # "FE: icpsr_agency" = "Legislator-agency fixed effects",
       # "FE: District" = "District fixed effects",
       # "FE: Year" = "Year fixed effects",
       # "FE: Legislator.*x.*Agency"= "Legislator x agency fixed effects",
       #  "FE: Year.*x.*Agency" = "Year x agency fixed effects",
       # "FE: Legislator" = "Legislator fixed effects",
              "Num.Obs." = "Observations"              )

# FORMATTING FOR AJPS 
cmAJPS <- cm |> str_to_sentence()
names(cmAJPS) <- names(cm)
cm <- cmAJPS
# END FORMATTING FOR AJPS 

coef_omit = "(Intercept)|majority|presidents_party"
coef_omit = "none"

setFixest_dict(cm)


format_n <- function(x) format(round(x, 3), big.mark=",") # this works
f <- function(x) stringr::str_replace(x, "[A-z]", "✓") #FIXME not sure why this is not working

gm <- list(
  list("raw" = "nobs", "clean" = "Observations", "fmt" = format_n),
    list("raw" = "FE: Year_x_Agency", "clean" = "Year x agency fixed effects", "fmt" = f),
      list("raw" = "FE: Legislator_x_Agency", "clean" = "Legislator x agency fixed effects", "fmt" = f),
  list("raw" = "FE: icpsr_agency", "clean" = "Legislator-agency fixed effects", "fmt" = f),
       list("raw" = "FE: District", "clean" = "District fixed effects", "fmt" = f),
       list("raw" = "FE: Year", "clean" = "Year fixed effects", "fmt" = f),
       list("raw" = "FE: Legislator.*x.*Agency", "clean" = "Legislator x agency fixed effects", "fmt" = f),
        list("raw" = "FE: Year.*x.*Agency", "clean" = "Year x agency fixed effects", "fmt" = f),
       list("raw" = "FE: Legislator", "clean" = "Legislator fixed effects", "fmt" = f)
  )


# table formatting to match stata (sort of)
# The manuscript now just imports the model objects, so writing the .tex tables is vestigial (keeping it just in case)
format_table <- . %>% 
  # OLD modelsummary based on kableExtra package (broken): https://stackoverflow.com/questions/78422275/argument-is-of-length-zero-from-kableextra-after-updating-rstudio
  #kableExtra::kable_styling(font_size = 11) %>% 
                    #full_width = TRUE, 
                    #latex_options = c("repeat_header")) %>%
  # NEW modelsummary based on tinytable package: https://vincentarelbundock.github.io/tinytable/vignettes/format.html
  as.character() %>% 
  str_replace("Num.Obs.", "Observations") %>% 
  str_replace("Std.Errors", "\footnotesize robust clustered standard errors") %>% 
  str_replace("FE: Legislator.*x.*Agency", "Legislator x agency fixed effects") %>%
  str_replace("FE: Year.*x.*Agency", "Year x agency fixed effects") %>% 
  str_replace("FE: Year", "Year fixed effects") %>% 
  str_replace("FE: District", "District fixed effects") %>% 
  str_replace("FE: Legislator", "Legislator fixed effects") %>%
    str_replace_all("X|✓", "\\\\\\checkmark") %>% 
  # a random midrule appeared in the wrong place 
  #str_remove("\\midrule") %>% 
  #  extract just the table, no caption etc
  str_remove_all("\\\\begin\\{table\\}|\\\\centering|\\\\end\\{table\\}")

# for testing table formatting
if(F){
# raw   
 modelsummary::modelsummary(models)
  
  load(here::here("models", "models_total.Rdata"))

# markdown 
modelsummary::modelsummary(models_total,  
             stars = c('+' = .1, '*' = .05, '**' = .01), 
             #align="ldddd",
             add_rows = rows,               
             coef_map = cm, 
             gof_map = gm, 
             
             output = "html",
             notes = list("Robust standard errors in parentheses, clustered by legislator.")) |> 
    tinytable::style_tt(i = 1, bold = T, line = "b")

  
# TeX 
modelsummary::modelsummary(models_total,  # stars = T, 
             add_rows = rows,               
             coef_map = cm, 
             gof_map = gm, 
             
             output = "latex",
             notes = list("Robust standard errors in parentheses, clustered by legislator.")) |> 
    tinytable::format_tt(
    digits = 2,
    fontsize = 11,
    num_mark_big = ",") |>
  format_table()  
}


# manuscript
# AJPS regression table formatting
modelsummary <- function(models, notes = "", center_rows = 1){
  modelsummary::modelsummary(models,  
             stars = c('†' = .1, '*' = .05, '**' = .01), 
             align = paste0("l", paste0(rep("d", length(models)), collapse = "")), # Align coefficients by decimal for AJPS 
             add_rows = rows,               
             coef_map = cm, 
             gof_map = gm, 
             output = "tinytable",
             notes = notes) |>
  # bold header, hline bottom, aligned center
    tinytable::style_tt(i = 0:1, bold = T, line = "b",  align = "c") |>
     # stats aligned center 
    tinytable::style_tt(i = center_rows, align = "c") |> 
  # row labels left
      tinytable::style_tt(j = 1, align = "l")
} 

```


---

## Total Letters 

### Member-level Coefficient Plots


- Figures: `figs/m-total-[1:4].png`

```{r}
#| label: "m-total"
#| fig-cap: "m-total-[1:4].png"
#| layout-ncol: 2
#| fig-height: 4.5
#| fig-subcap: 
#|   - "1"
#|   - "2"
#|   - "3"
#|   - "4"
#| out-width: "100%"
#| fig-show: "hold"

# paper table 2
# Model 1 
# cross-sectional 
m_total_cross <-feglm (perYear ~ 
                         chair + ranking_minority + prestige + 
                    first + second + third + fourth + fifth + sixth + 
                    majority + presidents_party | Year_x_Agency,
                    cluster = "Legislator", 
           data = dcounts_tenure)

if(testing){modelsummary::modelsummary(m_total_cross)}

coefplot(m_total_cross, horiz = T, drop = "(Intercept)") 



# Model 2
m_total_dnd <-feglm (perYear ~ 
                       chair + ranking_minority + prestige + 
                    first + second + third + fourth + fifth + sixth + 
                    majority + presidents_party | Year_x_Agency + Legislator_x_Agency, 
                    cluster = "Legislator",
                    # ALT vcov = hetero ~ ssc(cluster.adj = TRUE),
           data = dcounts_tenure)

if(testing){modelsummary::modelsummary(m_total_dnd)}

coefplot(m_total_dnd, horiz = T) 


# 3
m_total_2nd <-feglm (perYear ~ 
                       chair + ranking_minority + prestige + 
                    first + second + third + fourth + fifth + sixth + 
                    majority + presidents_party | Year_x_Agency + Legislator_x_Agency, 
                    cluster = "Legislator", 
           data = dcounts_tenure %>% filter(survive == 1))

if(testing){modelsummary::modelsummary(m_total_2nd)}
coefplot(m_total_2nd, horiz = T) 


# 4
m_logtotal_dnd <-feglm (log(perYear + 1) ~ 
                          chair + ranking_minority + prestige + 
                    first + second + third + fourth + fifth + sixth + 
                    majority + presidents_party | Year_x_Agency + Legislator_x_Agency, 
                    cluster = "Legislator", 
           data = dcounts_tenure)

if(testing){modelsummary::modelsummary(m_logtotal_dnd)}

coefplot(m_logtotal_dnd, horiz = T) 


```

### Total Letters Table 

- Table: `tables/models_total.tex` 
- Models: `models/models_total.Rdata` 


```{r models_total}
models_total <- list(
  "(1)" = m_total_cross,
  "(2)" = m_total_dnd,
  "(3)" =  m_total_2nd,
  "(4)" = m_logtotal_dnd
)

rows <- tibble(
  term = c("Dependent variable", 
           "Majority",
           "President's party",
           "All legislators", 
           "Served at least 2nd term"),
  `(1)` = c("Count", "✓", "✓", "✓", ""),
  `(2)` =c("Count", "✓", "✓", "✓", ""),
  `(3)` = c("Count", "✓","✓","", "✓"),
  `(4)` = c("Log(Count+1)","✓","✓", "✓", "") 
)

rows <- tibble(
  term = c("Dependent variable", 
           #"Majority",
           #"President's party",
           "All legislators", 
           "Served at least 2nd term"),
  `(1)` = c("Count", "✓", ""),
  `(2)` =c("Count", "✓", ""),
  `(3)` = c("Count","", "✓"),
  `(4)` = c("Log(Count+1)", "✓", "") 
)

attr(rows, 'position') <- c(0, 20,21,22,23)

attr(rows, 'position') <- c(0, 24,25)


# HTML
modelsummary::modelsummary(models_total,  
             stars = c('†' = .1, '*' = .05, '**' = .01), 
             ##align="ldddd",
             add_rows = rows,               
             coef_map = cm, 
             gof_map = gm, 
             
             output = "tinytable",
             notes = list("Robust standard errors in parentheses, clustered by legislator.",
                          "This table shows estimates of the effect of institutional power on levels of constituency service. All coefficients represent the average additional requests per year per agency; per legislator, per year effects are simply these coefficients times the number of agencies in the data.")) |>  
    tinytable::style_tt(i = 1, bold = T, line = "b") 



# # TeX 
# modelsummary::modelsummary(models_total,
#              stars = T, 
#              add_rows = rows,               
#              coef_map = cm, 
#              gof_map = gm, 
#              
#              output = "latex",
#              notes = list("Robust standard errors in parentheses, clustered by legislator.")) |> 
#   format_table()  %>% 
#   write_lines(file = here::here("docs", "tables", "models_total.tex") )


beta <- m_total_dnd$coefficients %>%
  round(3) %>% 
  as_tibble(rownames = "beta") %>% 
  pivot_wider(names_from = beta)

se <- m_total_dnd$se %>%
  round(3) %>% as_tibble(rownames = "se") %>%
  pivot_wider(names_from = se)

save(models_total, rows, cm, gm, coef_omit, beta, se,
     file = here::here("models", "models_total.Rdata"))
```


### Total Letters Narrative

To address potential confounding in across-legislator comparisons, the estimates from Model 2 (Column 2 of Table `@tbl-models_total`) provide the estimated effects from the difference-in-differences specification in Equation `@eq-diff1`. Across all measures of institutional power, we find that more power increases the number of requests that legislators make. Consider first the effect of being a committee chair. We estimate that becoming a committee chair causes an increase of `r beta$chair`  requests *per agency* (95-percent confidence interval [`r beta$chair - se$chair*1.96`, `r beta$chair + se$chair*1.96`]). Across all `r n_agency` agencies, this represents an increase of approximately `r (beta$chair*n_agency) %>% round(0)` additional requests per year, `r (beta$chair / mean_total ) %>% round(2)*100 `% of the average requests per year in our data. There is a smaller increase for individuals who become ranking members and those who join a Prestige Committee, though the increase is statistically significant for the prestige committee. Becoming a ranking member of a committee causes an increase of `r beta$ranking_minority` contacts per agency, while joining a prestige committee causes an `r beta$chair` per agency increase in the number of contacts a member of Congress makes.

We estimate that the experience gained between the first and second year in Congress causes an increase of `r beta$second-beta$first`  requests *per agency*. The experience gained between the first and seventh year causes an increase of `r -beta$first` per agency. Across all n_agency agencies, this represents an increase of approximately `r (-beta$first*n_agency) %>% round(0)` additional requests per year, `r ((-beta$first) / mean_total ) %>% round(2)*100 `% of the average requests per year in our data. There is a smaller increase after the second year. The experience gained between the second and seventh year causes an increase of `r -beta$second` per agency, an increase of approximately `r (-beta$second*n_agency) %>% round(0)` additional requests per year, `r ((-beta$second) / mean_total ) %>% round(2)*100 `% of the average requests per year in our data. 

### Total Letters Predictions 

- Figures: `figs/m-total-predicted-[1:4].png`


```{r}
#| label: "m-total-predicted"
#| fig-cap: "m-total-predicted"
#| layout-ncol: 2
#| fig-height: 3
#| fig-subcap: 
#|   - "1"
#|   - "2"
#|   - "3"
#|   - "4"
#| out-width: "100%"
#| fig-show: "hold"


predicted <- predictions(m_total_cross,
                         newdata = values)

# Cross-sectional predictions
predicted %>%
    mutate(estimate = estimate*n_agency, #predicted*n_agency,
         conf.high = conf.high*n_agency, conf.low = conf.low*n_agency) %>%  # std.error = std.error*n_agency) %>%
  ggchair() + 
  labs(title =  "", # "Predicted Total Letters per year\n(Cross-Sectional)",
       x = "",
       y = "Predicted Total Letters Per year",
       fill = "",
       color = "",
       shape = "") 

# by tenure
predicted <- predictions(m_total_cross,
                         newdata = values_tenure)

predicted %>%
    mutate(estimate = estimate*n_agency, #predicted*n_agency,
         conf.high = conf.high*n_agency, conf.low = conf.low*n_agency) %>%  # std.error = std.error*n_agency) %>%
ggtenure() +
  labs(title =  "", # "Predicted Total Letters Per year\n(Cross-Sectional)",
       x = "Years serving in Congress",
       y = "Predicted letters per year",
       fill = "",
       color = "",
       shape = "") 


# diff in diff 
predicted <- predictions(m_total_dnd,
                         newdata = values)


# Predictions by Chair and President's Party
predicted %>%
    mutate(estimate = estimate*n_agency, #predicted*n_agency,
         conf.high = conf.high*n_agency, conf.low = conf.low*n_agency) %>% # std.error = std.error*n_agency)) %>%
  ggchair() + 
  labs(title =  "", # "Predicted Total Letters per year\nDifference in Differences (Within-Legislator)",
       x = "",
       y = "Predicted letters per year",
       fill = "",
       color = "",
       shape = "") 

# by tenure
predicted <- predictions(m_total_dnd,
                         newdata = values_tenure)

predicted %>%
    mutate(estimate = estimate*n_agency, #predicted*n_agency,
         conf.high = conf.high*n_agency, conf.low = conf.low*n_agency) %>%  # std.error = std.error*n_agency) %>%
ggtenure() +
    geom_line(aes(x = as.numeric(year_in_congress %>% str_sub(1,1) %>% str_replace("N", "1")))) + 
  labs(title =  "", # "Predicted Total Letters Per year\nDifference in Differences (Within-Legislator)",
       x = "Years serving in Congress",
       y = "Predicted letters per year",
       fill = "",
       color = "",
       shape = "") 
```


## Constituency Service

### Member-level Constituency Service Coefficient Plots


DV: Only letters coded as constituency service letters

- Figures: `figs/m-con-[1:4].png`

```{r}
#| label: "m-con"
#| fig-cap: "figs/m-con-[1:4].png"
#| layout-ncol: 2
#| fig-height: 4.5
#| fig-subcap: 
#|   - "1"
#|   - "2"
#|   - "3"
#|   - "4"
#| out-width: "100%"
#| fig-show: "hold"


m_con_cross <-feglm (perYear_con ~ 
                       chair + ranking_minority + prestige + 
                    first + second + third + fourth + fifth + sixth + 
                    majority + presidents_party | Year_x_Agency,
                    cluster = "Legislator", 
           data = dcounts_tenure)

if(testing){modelsummary::modelsummary(m_con_cross)}

coefplot(m_con_cross, horiz = T, drop = "(Intercept)") 



# 2
m_con_dnd <-feglm (perYear_con ~ 
                     chair + ranking_minority + prestige + 
                    first + second + third + fourth + fifth + sixth + 
                    majority + presidents_party | Year_x_Agency + Legislator_x_Agency, 
                    cluster = "Legislator",
           data = dcounts_tenure)

if(testing){modelsummary::modelsummary(m_con_dnd)}
coefplot(m_con_dnd, horiz = T) 


# 3
m_con_2nd <-feglm (perYear_con ~ 
                     chair + ranking_minority + prestige + 
                    first + second + third + fourth + fifth + sixth + 
                    majority + presidents_party | Year_x_Agency + Legislator_x_Agency, 
                    cluster = "Legislator", 
           data = dcounts_tenure %>% filter(survive == 1))

if(testing){modelsummary::modelsummary(m_con_2nd)}
coefplot(m_con_2nd, horiz = T) 


# 4
m_logcon_dnd <-feglm (log(perYear_con + 1) ~ 
                        chair + ranking_minority + prestige + 
                    first + second + third + fourth + fifth + sixth + 
                    majority + presidents_party | Year_x_Agency + Legislator_x_Agency, 
                    cluster = "Legislator", 
           data = dcounts_tenure)

if(testing){modelsummary::modelsummary(m_logcon_dnd)}

coefplot(m_logcon_dnd, horiz = T) 
```

### Constituency Service Table

- Table: `tables/models_con.tex` 
- Models: `models/models_con.Rdata` 


```{r models_con}
models_con <- list(
  "(1)" = m_con_cross,
  "(2)" = m_con_dnd,
  "(3)" =  m_con_2nd,
  "(4)" = m_logcon_dnd
)


# modelsummary(models_con) %>% 
#   tinytable::style_tt(i = 1, bold = T, line = "b")
# 
# modelsummary::modelsummary(models_con, # stars = T, 
#              add_rows = rows,               
#              coef_map = cm, 
#              gof_map = gm, 
#              output = "latex",
#              notes = list(" Robust standard errors in parentheses, clustered by legislator."))%>% 
#   format_table() %>%
#   write_lines(file = here::here("docs", "tables", "models_con.tex") )

beta <- m_con_dnd$coefficients %>%round(3) %>% as_tibble(rownames = "beta") %>% pivot_wider(names_from = beta)

se <- m_con_dnd$se %>%round(3) %>% as_tibble(rownames = "se") %>% pivot_wider(names_from = se)

save(models_con, rows, cm, gm, coef_omit, beta, se,
     file = here::here("models", "models_con.Rdata"))
```


### Constituency Service Narrative 

Table `@tbl-models_con` is identical to Table `@tbl-models_total` except that we subset the data to only legislator requests hand-coded as constituency service. 
Column 2 of Table `@tbl-models_con` provides the estimated effects from the difference-in-differences specification in Equation `@eq-diff1`. More experience increases the level of constituency service that legislators provide. The effect of being a committee chair is positive but not significant at the .05 level. 
We estimate that the experience gained between the first and second year in Congress causes an increase of `r beta$second-beta$first`  requests *per agency*.  The experience gained between the first and seventh year causes an increase of `r -beta$first` per agency. Across all `r n_agency` agencies, this represents an increase of approximately `r (-beta$first*n_agency) %>% round(0)` additional requests per year, `r ((-beta$first) / mean_con ) %>% round(2)*100 `% of the average requests per year in our data. There is a smaller increase after the second year. The experience gained between the second and seventh year causes an increase of `r -beta$second` per agency, an increase of approximately `r (-beta$second*n_agency) %>% round(0)` additional requests per year, `r ((-beta$second) / mean_con ) %>% round(2)*100 `% of the average requests per year in our data. 


### Constituency Service Predictions 

- Figures: `figs/m-con-predicted-[1:4].png`

```{r m-con-predicted,  fig.show="hold", out.width="50%", fig.cap= "Constituency Service", fig.subcap= c("1", "2", "3", "4")}
#| label: "m-con-predicted"
#| fig-cap: "m-con-predicted"
#| layout-ncol: 2
#| fig-height: 3
#| fig-subcap: 
#|   - "1"
#|   - "2"
#|   - "3"
#|   - "4"
#| out-width: "100%"
#| fig-show: "hold"


# Cross-sectional predictions:
predicted <- predictions(m_con_cross,
                         newdata = values)


# A plot by chair & presidents' party
predicted %>%
  mutate(estimate = estimate*n_agency, #predicted*n_agency,
         conf.high = conf.high*n_agency, conf.low = conf.low*n_agency) %>% # std.error = std.error*n_agency)) %>%
  ggchair() + 
  labs(title =  "", # "Predicted Constituency Service Letters per year\n(Cross-Sectional)",
       x = "",
       y = "Predicted letters per year",
       fill = "",
       color = "",
       shape = "") 

# by tenure
predicted <- predictions(m_con_cross,
                         newdata = values_tenure)

predicted %>%
    mutate(estimate = estimate*n_agency, #predicted*n_agency,
         conf.high = conf.high*n_agency, conf.low = conf.low*n_agency) %>%  # std.error = std.error*n_agency) %>%
ggtenure() +
   # geom_line(aes(x = as.numeric(year_in_congress %>% str_sub(1,1)))) + 
  labs(title =  "", # "Predicted Constituency Service Letters Per year\n(Cross Sectional)",
       x = "Years serving in Congress",
       y = "Predicted letters per year",
       fill = "",
       color = "",
       shape = "") 



# Diff in diff predictions 
predicted <- predictions(m_con_dnd,
                         newdata = values)


# diff in diff plot
predicted %>%
  mutate(estimate = estimate*n_agency, #predicted*n_agency,
         conf.high = conf.high*n_agency, conf.low = conf.low*n_agency) %>% # std.error = std.error*n_agency)) %>%
  ggchair() + 
  labs(title =  "", # "Predicted Constituency Service Letters per year\nDifference in Differences (Within-Legislator)",
       x = "",
       y = "Predicted letters per year",
       fill = "",
       color = "",
       shape = "") 

# by tenure
predicted <- predictions(m_con_dnd,
                         newdata = values_tenure)

predicted %>%
    mutate(estimate = estimate*n_agency, #predicted*n_agency,
         conf.high = conf.high*n_agency, conf.low = conf.low*n_agency) %>%  # std.error = std.error*n_agency) %>%
ggtenure() +
    geom_line(aes(x = as.numeric(year_in_congress %>% str_sub(1,1)))) + 
  labs(title =  "", # "Predicted Constituency Service Letters Per year\nDifference in Differences (Within-Legislator)",
       x = "Years serving in Congress",
       y = "Predicted letters per year",
       fill = "",
       color = "",
       shape = "") 
```



## Policy Work

### Member-level Policy Work Coefficient Plots

Only using letters coded as constituent letters 

- Figures: `figs/m-policy-[1:4].png`

```{r m-policy}
#| label: "m-policy"
#| fig-cap: "figs/m-policy-[1:4].png"
#| layout-ncol: 2
#| fig-height: 4.5
#| fig-subcap: 
#|   - "1"
#|   - "2"
#|   - "3"
#|   - "4"
#| out-width: "100%"
#| fig-show: "hold"

m_policy_cross <-feglm (perYear_policy ~ 
                          chair + ranking_minority + prestige + 
                    first + second + third + fourth + fifth + sixth + 
                    majority +  presidents_party | Year_x_Agency,
                    cluster = "Legislator", 
           data = dcounts_tenure)

if(testing){modelsummary::modelsummary(m_policy_cross)}

coefplot(m_policy_cross, horiz = T, drop = "(Intercept)") 



# 2
m_policy_dnd <-feglm (perYear_policy ~ 
                        chair + ranking_minority + prestige + 
                    first + second + third + fourth + fifth + sixth + 
                    majority + presidents_party | Year_x_Agency + Legislator_x_Agency, 
                    cluster = "Legislator",
           data = dcounts_tenure)

if(testing){modelsummary::modelsummary(m_policy_dnd)}
coefplot(m_policy_dnd, horiz = T) 


# 3
m_policy_2nd <-feglm (perYear_policy ~ 
                        chair + ranking_minority + prestige + 
                    first + second + third + fourth + fifth + sixth + 
                    majority + presidents_party | Year_x_Agency + Legislator_x_Agency, 
                    cluster = "Legislator", 
           data = dcounts_tenure %>% filter(survive == 1))

if(testing){modelsummary::modelsummary(m_tenure_2nd)}
coefplot(m_policy_2nd, horiz = T) 


# 4
m_logcon_dnd <-feglm (log(perYear_policy + 1) ~ 
                        chair + ranking_minority + prestige + 
                    first + second + third + fourth + fifth + sixth + 
                    majority + presidents_party | Year_x_Agency + Legislator_x_Agency, 
                    cluster = "Legislator", 
           data = dcounts_tenure)

if(testing){modelsummary::modelsummary(m_logcon_dnd)}

coefplot(m_logcon_dnd, horiz = T) 
```

### Policy Work Table

- Table: `tables/models_policy.tex` 
- Models: `models/models_policy.Rdata` 

```{r models_policy}
models_policy <- list(
  "(1)" = m_policy_cross,
  "(2)" = m_policy_dnd,
  "(3)" =  m_policy_2nd,
  "(4)" = m_logcon_dnd
)


# modelsummary(models_policy,
#              notes = list("Robust standard errors in parentheses, clustered by legislator." )) 
# 
# modelsummary::modelsummary(models_policy,
#              output = "latex",
#              notes = list(" Robust standard errors in parentheses, clustered by legislator." )) %>% 
#   format_table() %>%
#    write_lines(file = here::here("docs", "tables", "models_policy.tex") )


beta <- m_policy_dnd$coefficients %>%round(3) %>% as_tibble(rownames = "beta") %>% pivot_wider(names_from = beta)

se <- m_policy_dnd$se %>%round(3) %>% as_tibble(rownames = "se") %>% pivot_wider(names_from = se)

save(models_policy, rows, cm, gm, coef_omit, beta, se,
     file = here::here("models", "models_policy.Rdata"))
```

### Policy Work Predictions 

- Figures: `figs/m-policy-predicted-[1:4].png`

```{r}
#| label: "m-policy-predicted"
#| fig-cap: "m-policy-predicted"
#| layout-ncol: 2
#| fig-height: 3
#| fig-subcap: 
#|   - "1"
#|   - "2"
#|   - "3"
#|   - "4"
#| out-width: "100%"
#| fig-show: "hold"

predicted <- predictions(m_policy_cross,
                         newdata = values)

# Cross-sectional predictions
predicted %>%
  mutate(estimate = estimate*n_agency, #predicted*n_agency,
         conf.high = conf.high*n_agency, conf.low = conf.low*n_agency) %>% # std.error = std.error*n_agency)) %>%
  ggchair() +
  labs(title =  "", # "Predicted Policy Letters per year\n(Cross-Sectional)",
       x = "",
       y = "Predicted letters per year",
       fill = "",
       color = "",
       shape = "") 

# by tenure
predicted <- predictions(m_policy_cross,
                         newdata = values_tenure)

predicted %>%
    mutate(estimate = estimate*n_agency, #predicted*n_agency,
         conf.high = conf.high*n_agency, conf.low = conf.low*n_agency) %>%  # std.error = std.error*n_agency) %>%
ggtenure() +
  labs(title =  "", # "Predicted Policy Letters Per year\n(Cross Sectional)",
       x = "Years serving in Congress",
       y = "Predicted letters per year",
       fill = "",
       color = "",
       shape = "") 


# Predictions for diff in diff plot 
predicted <- predictions(m_policy_dnd,
                         newdata = values)


# diff in diff plot
predicted %>%
  mutate(estimate = estimate*n_agency, #predicted*n_agency,
         conf.high = conf.high*n_agency, conf.low = conf.low*n_agency) %>% # std.error = std.error*n_agency)) %>%
  ggchair() +
  labs(title =  "", # "Predicted Policy Letters per year\nDifference in Differences (Within-Legislator)",
       x = "",
       y = "Predicted letters per year",
       fill = "",
       color = "",
       shape = "")  

# by tenure
predicted <- predictions(m_policy_dnd,
                         newdata = values_tenure)

predicted %>%
    mutate(estimate = estimate*n_agency, #predicted*n_agency,
         conf.high = conf.high*n_agency, conf.low = conf.low*n_agency) %>%  # std.error = std.error*n_agency) %>%
ggtenure() +
    geom_line(aes(x = as.numeric(year_in_congress %>% str_sub(1,1)))) + 
  labs(title =  "", # "Predicted Policy Letters Per year\nDifference in Differences (Within-Legislator)",
       x = "Years serving in Congress",
       y = "Predicted letters per year",
       fill = "",
       color = "",
       shape = "") 


```


### Policy Work Narrative

Table `@tbl-models_policy` is identical to Table `@tbl-models_total` except that we subset the data to only legislator requests hand-coded as policy work. 
Column 2 of Table `@tbl-models_policy` provides the estimated effects from the difference-in-differences specification in Equation `@eq-diff1`. Across all measures of institutional power, we find that more power increases the level of policy work that legislators provide. Consider first the effect of being a committee chair. We estimate that becoming a committee chair causes an increase of `r beta$chair`  policy requests *per agency* (95-percent confidence interval [`r beta$chair - se$chair*1.96`, `r beta$chair + se$chair*1.96`]). Across all `r n_agency` agencies, this represents an increase of approximately `r (beta$chair*n_agency) %>% round(0)` additional requests per year, `r (beta$chair / mean_pol ) %>% round(2)*100`% of the average requests per year in our data. There is a smaller increase for individuals who become ranking members and those who join a Prestige Committee, though the increase is statistically significant for the prestige committee. Becoming a ranking member of a committee causes an increase of `r beta$ranking_minority` contacts per agency, while joining a prestige committee causes a `r beta$chair` per agency increase in the policy requests a member of Congress makes.


## Total + Constituency

### Total + Constituency Service Table

- Table: `tables/models_total_con.tex` 
- Models: `models/models_total_con.Rdata` 

```{r models_total_con}
models_total_con <- list(
  "(1)" = m_total_cross,
  "(2)" = m_total_dnd,
  "(3)" =  m_con_cross,
  "(4)" = m_con_dnd
)


rows <- tibble(
  term = c("Dependent variable"),
  `(1)` = c("Total Count"),
  `(2)` =c("Total Count"),
  `(3)` = c("Constituent Service"),
  `(4)` = c("Constituent Service") 
)

attr(rows, 'position') <- c(0)

modelsummary(models_total_con)

beta_total <- m_total_dnd$coefficients %>%round(3) %>% as_tibble(rownames = "beta") %>% pivot_wider(names_from = beta)

beta_con <- m_con_dnd$coefficients %>%round(3) %>% as_tibble(rownames = "beta") %>% pivot_wider(names_from = beta)

se_total <- m_total_dnd$se %>%round(3) %>% as_tibble(rownames = "se") %>% pivot_wider(names_from = se) |> mutate_all(as.numeric)

se_con <- m_con_dnd$se %>%round(3) %>% as_tibble(rownames = "se") %>% pivot_wider(names_from = se)|> mutate_all(as.numeric)

save(models_total_con, rows, cm, gm, beta_total, se_total, beta_con, se_con,
     file = here::here("models", "models_total_con.Rdata"))
```


### Total + Constituency Service Narrative 

 `@tab-models_total_con` shows the effects of institutional power and experience on overall requests to federal agencies (Models 1 and 1) and constituency service requests (Models 3 and 4). Models 3 and 4 are identical to models 1 and 2 except that we subset the data to only legislator requests hand-coded as constituency service. 
Columns 2 and 4 of `@tab-models_total_con` provide the estimated effects from the difference-in-differences specification in `@eq-diff1`. 
More experience and receiving a committee chairship increases the total requests to federal agencies.
More experience increases the level of constituency service that legislators provide. 
The effect of being a committee chair is positive but not significant at the .05 level. 

Becoming a committee chair causes an increase of `r beta_total$chair` requests *per agency*
(95-percent confidence interval [`r beta_total$chair-1.96*se_total$chair`, `r beta_total$chair+1.96*se_total$chair`]). Across all
`{r} readLines(here::here("docs", "tables", "n_agencies"))` agencies,
this represents an increase of approximately `r beta_total$chair*n_agency` additional requests per
year,  `r ((-beta_total$second) / mean_total ) %>% round(2)*100`% of the average requests per year in our data.


Subsetting to requests hand-coded as constituency service, we estimate that becoming a committee chair causes an increase of `r beta_con$chair` requests *per agency*, but this increase is not significant at the .05 level (95-percent confidence interval [`r beta_con$chair-1.96*se_con$chair`, `r beta_con$chair+1.96*se_con$chair`]). Across all
`{r} readLines(here::here("docs", "tables", "n_agencies"))` agencies, this represents an increase of approximately `r beta_con$chair*n_agency` additional requests per
year,  `r ((-beta_con$second) / mean_con ) %>% round(2)*100`% of the average constituency service requests per year in our data.


We estimate that the experience gained between the first and second year in Congress causes an increase of `r beta_total$second-beta_total$first`  requests *per agency*.  
The experience gained between the first and seventh year causes an increase of `r -beta_total$first` per agency. Across all `r n_agency` agencies, this represents an increase of approximately `r (-beta_total$first*n_agency) %>% round(0)` additional requests per year, `r ((-beta_total$first) / mean_total ) %>% round(2)*100`% of the average requests per year in our data. There is a smaller increase after the second year. The experience gained between the second and seventh year causes an increase of `r -beta_total$second` per agency, an increase of approximately `r (-beta_total$second*n_agency) %>% round(0)` additional requests per year, `r ((-beta_total$second) / mean_total ) %>% round(2)*100`% of the average requests per year in our data. 


Subsetting to requests hand-coded as constituency service, we estimate that the experience gained between the first and second year in Congress causes an increase of `r beta_con$second-beta_con$first` constituency service requests *per agency*.  
The experience gained between the first and seventh year causes an increase of `r -beta_con$first` per agency. Across all `r n_agency` agencies, this represents an increase of approximately `r (-beta_con$first*n_agency) %>% round(0)` additional constituency service requests per year, `r ((-beta_con$first) / mean_total ) %>% round(2)*100`% of the average constituency service requests per year in our data. Again, there is a smaller increase after the second year. The experience gained between the second and seventh year causes an increase of `r -beta_con$second` per agency, an increase of approximately `r (-beta_con$second*n_agency) %>% round(0)` additional constituency service requests per year, `r ((-beta_con$second) / mean_total ) %>% round(2)*100`% of the average requests per year in our data. 




# Ratio 

### Member-level Ratio Coefficient Plots


- Figures: `figs/m-ratio-[1:2].png`

```{r}
#| label: "m-ratio"
#| fig-cap: "figs/m-ratio-[1:4].png"
#| layout-ncol: 2
#| fig-height: 4.5
#| fig-subcap: 
#|   - "1"
#|   - "2"
#|   - "3"
#|   - "4"
#| out-width: "100%"
#| fig-show: "hold"

dcounts_ratio %<>% 
  mutate(Legislator = icpsr,
         Year = year) %>% 
  filter(year >2006 & year < 2019)

m_ratio_cross <- feglm(ratio ~
  chair + ranking_minority + prestige + majority +  presidents_party + 
  first + second + third + fourth + fifth + sixth | Year,
cluster = "Legislator",
data = dcounts_ratio)

if(testing){modelsummary::modelsummary(m_ratio_cross)}

coefplot(m_ratio_cross, horiz = T, drop = "(Intercept)") 



# Diff in diff
m_ratio_dnd <- feglm(ratio ~
  chair + ranking_minority + prestige + majority + presidents_party + 
  first + second + third + fourth + fifth + sixth | 
    Legislator + Year,
cluster = "Legislator",
data = dcounts_ratio)

if(testing){modelsummary::modelsummary(m_ratio_dnd)}

coefplot(m_ratio_dnd, horiz = T) 
```

### Ratio Table

- Table: `tables/models_ratio.tex` 
- Models:  `tables/models_ratio.Rdata` 

```{r models_ratio}
models_ratio <- list(
  "(1)" = m_ratio_cross,
  "(2)" = m_ratio_dnd
)

rows <- tibble(
  term = c("Dependent variable", 
           "Majority", 
           "President's party"),
  `(1)` = c("Ratio", 
            "✓", 
            "✓"),
  `(2)` =c("Ratio", 
           "✓", 
           "✓")
)

# all coef
rows <- tibble(
  term = c("Dependent variable"),
  `(1)` = c("Ratio"),
  `(2)` =c("Ratio")
)

# Checkmarks for controls 
attr(rows, 'position') <- c(0, 20,21)

# all coef
attr(rows, 'position') <- c(0)


modelsummary(models_ratio,
             notes = list("Robust standard errors in parentheses, clustered by legislator.") )

# modelsummary::modelsummary(models_ratio, # stars = T, 
#              add_rows = rows,               
#              coef_map = cm, 
#              gof_map = gm, 
#              
#              output = "latex",
#              notes = list(" Robust standard errors in parentheses, clustered by legislator.") ) %>% 
#   # format to match stata output (sort of)
#   format_table() %>%
#    write_lines(file = here::here("docs", "tables", "models_ratio.tex") )

beta <- m_ratio_dnd$coefficients %>%round(3) %>% as_tibble(rownames = "beta") %>% pivot_wider(names_from = beta)

se <- m_ratio_dnd$se %>%round(3) %>% as_tibble(rownames = "se") %>% pivot_wider(names_from = se)

save(models_ratio, rows, cm, gm, coef_omit, beta, se,
     file = here::here("models", "models_ratio.Rdata"))
```

### Ratio Narrative 

Column 2 of Table `@tbl-models_ratio` provides the estimated effects from the difference-in-differences specification. 
We estimate that becoming a committee chair causes the ratio of constituency service to policy work to decrease by `r -beta$chair` (95-percent confidence interval [`r beta$chair + se$chair*1.96`, `r beta$chair - se$chair*1.96` ]). Becoming a ranking member of a committee causes a decrease of `r -beta$ranking_minority`  in the ratio.



### Predictions 

- Figures: `figs/m-ratio-predicted-[1:4].png`

```{r}
#| label: "m-ratio-predicted"
#| fig-cap: "m-ratio-predicted"
#| layout-ncol: 2
#| fig-height: 3
#| fig-subcap: 
#|   - "1"
#|   - "2"
#|   - "3"
#|   - "4"
#| out-width: "100%"
#| fig-show: "hold"

predicted <- predictions(m_ratio_cross,
                         newdata = values)



# Cross-sectional predictions
predicted %>%
ggchair() +
  labs(title = "", # Predicted ratio of constituent to policy work\n(cross-sectional)",
       x = "",
       y = "Predicted ratio of\nconstituent to policy work",
       fill = "",
       color = "",
       shape = "")

# by tenure
predicted <- predictions(m_ratio_cross,
                         newdata = values_tenure)

predicted %>%
ggtenure() +
  labs(title = "", # "Predicted Ratio of Constituent to Policy Work\n(Cross-Sectional)",
       x = "Years serving in Congress",
       y = "Predicted ratio of\nconstituent to policy work",
       fill = "",
       color = "",
       shape = "")


# Predictions for diff in diff plot 
predicted <- predictions(m_ratio_dnd,
                         newdata = values)


# diff in diff plot
predicted %>%
  ggchair() + 
  labs(title = "", # "Predicted Ratio of Constituent to Policy Work\nDifference in Differences (Within-Legislator)",
       x = "",
       y = "Predicted ratio of\nconstituent to policy work",
       fill = "",
       color = "",
       shape = "")

# by tenure
predicted <- predictions(m_ratio_dnd,
                         newdata = values_tenure)

predicted %>%
ggtenure() +
    geom_line(aes(x = as.numeric(year_in_congress %>% str_sub(1,1)))) + 
  labs(title = "", # "Predicted Ratio of Constituent to Policy Work\nDifference in Differences (Within-Legislator)",
       x = "Years serving in Congress",
       y = "Predicted ratio of\nconstituent to policy work",
       fill = "",
       color = "",
       shape = "")
```





---


# Per District

## Data


```{r}
#TODO deal with chamber switchers ? or maybe we don't need to since everything is calculated grouped at chamber level?
# count(members, bioname, icpsr, congress, sort = T) |> filter(n >1)

```

The main district-level models in the paper focus on estimating the effect of legislator experience by leveraging turnover within districts. We compare the service that a district receives before and after electing a new legislator and in the following years as legislators gain experience in office.

### `Same party` lookup table 

As a robustness check, we replicate our within-district results using a subset of district-year-count observations where turnover in a district allows us to assess the partisanship of the prior member holding that seat. We interact an indicator of whether the prior member was of the `same party` with all other indicators (i.e., whether the member is new, serving in years 1-6, or serving longer than 6 years). We compare the service that a district receives before and after electing a new legislator and, in the following years, accounting for whether that member is of the same party. However, a structural constraint of the data means that this robustness check is limited to observations where turnover *within* a redistricting cycle gives us a measure of whether the legislator replaced a member of the same party or of another party. 

The table below accounts for redistricting by treating post-redistricting districts as new entities, not the same district as the one with the same number prior to redistricting (i.e., we do NOT count cases where a district elects someone of the same or different party as the district with the same number had before redistricting). Since some states completely re-number their districts, there is no way to be sure that a new District 4 has any relationship to the District 4 under the previous redistricting map (though it often may have significant overlap) without creating some spatial measure of the percent of shared census tracts, or something like that, which we do not attempt. 

Many NAs exist for the `same party` variable because we only observe it when there is turnover *within* a redistricting cycle. Seats that do not turn over for an entire cycle (e.g., 2002-2012) are FALSE ("0") for "new member" and have no value for "same party." Other districts are NA until there is turnover. Thus, adding "same party" causes significant data loss due to NAs. 

- Specifically, we go from 7666 to 2822 observations when including `same_party` in the models below. 

To measure turnover in the Senate where "districts" have two members, we code `same party` as FALSE if there is a change in the partisanship of a state's Senate delegation. This captures the parallel dynamic of single-member House districts. If there are two Democrats and one is replaced by a Republican, the `same party` is FALSE. If there are two Democrats and a Democrat is elected, the `same party` is TRUE. If there are a Democrat senator and a Republican senator representing a state, and the Democrat is replaced by a Republican, `same_party` is FALSE. As per the VoteView convention, Senate delegations are District "0" (e.g., "alabama_0"). Split Senate delegations appear as "Democratic Party;Republican Party" in the table below.

```{r crosswalk}
# year congress crosswalk 
year_congress <- dcounts_tenure %>% distinct(year, congress)


# Add Congress variable 
dcounts_per_district %<>% 
  ungroup() %>% 
  # Add Congress variable 
  left_join(year_congress)

members %<>% left_join(year_congress) %>% arrange(icpsr, year)

duplicates <-distinct(dcounts_per_district, icpsr, chamber, congress, state, state_dist, new_member)  %>% count(icpsr, chamber, congress, state_dist) %>% filter(n > 1) 

# Because members of the house are new one year and not the other, we can't do "new" at the Congress level 
# inner_join(duplicates, dcounts_per_district)

# make a variable for the prior seatholder party 
party_crosswalk <- members  %>% 
  ungroup() %>% 
  # add new member and state_dist (accounting for redistricting)
  left_join(distinct(dcounts_per_district, icpsr, chamber, congress, state, state_dist, new_member, year)) %>% 
  # Begin at 2000 census redistricting 
  filter(year > 2001) %>% 
  # Make additional new member and state_dist to fill in NAs with "0" (i.e., 2002-2012 districting cycle )
  mutate(state_dist2 = paste(state, district_code, "0", sep = "_") |> 
           str_replace("0_0", "0"),
         state_dist = coalesce(state_dist, state_dist2)) %>% 
  group_by(state_dist, chamber, year) %>% 
  # combine ICPSR IDS for senators to get the senate delegation to know if it changed 
  arrange(icpsr) |> # Make sure they are in the same order 
  mutate(icpsr = unique(icpsr) |> paste(collapse = ";")) %>% # collapse senate ICPSR
  ungroup() %>% 
  group_by(state_dist, chamber) |> 
  arrange(year) |> 
  mutate(
         lag_icpsr = dplyr::lag(icpsr),
         new_member2 = icpsr != lag_icpsr,
         new_member =  coalesce(new_member, as.numeric(new_member2))) %>% 
  distinct(year, congress, state_dist, state, district_code, party, new_member #, new_member2, icpsr, lag_icpsr        
           ) %>% #FIXME DROPPING OBS HERE
  # # for Senate, capture mixed delegations 
  group_by(state_dist, year) %>% 
  arrange(party) %>% 
  mutate(state_dist_party = unique(party) |> paste(collapse = ";")) %>% 
  ungroup() %>% 
  # state_dist is missing for some obs in members, so here is a backup that does not account for redistricting. If we end up needing this, we should correct it to the districts accounting for redistricting
  mutate(state_dist2 = paste(state, district_code, sep = "_")) %>% 
  distinct(congress, state_dist,  state_dist_party, new_member, year #, new_member2, icpsr, lag_icpsr
  ) %>% 
  arrange(state_dist, year) %>% 
  # group by icpsr 
  group_by(state_dist) %>% 
  # create lag party var and fill it in for that member's tenure 
  mutate(lag_p = dplyr::lag(state_dist_party), 
         same_party = state_dist_party == lag_p,
         same_party = ifelse(new_member, 
                same_party,
                             NA )) %>% 
  tidyr::fill(same_party, .direction = "down")  %>% 
  ungroup()

# LOOK FOR MISSING OBS BY CONGRESS 
#members |> count(congress)
#party_crosswalk |> ungroup() |> count(congress, is.na(state_dist))
#party_crosswalk |> ungroup() |> filter(is.na(state_dist), congress > 109)


party_crosswalk  |>  
  select(year, state_dist, state_dist_party, lag_p, same_party, new_member)  |> 
  kablebox_long()

```



```{r add-crosswalk}

# Add same_party variable to district counts data 
dcounts_per_district %<>% 
  left_join(party_crosswalk ) %>% 
  arrange(state_dist, congress) %>% 
  ungroup()
  
dcounts_per_district |> 
  count(same_party) |> 
  kablebox()
# 


# dcounts_per_district |> filter(chamber == "House") |>   select(icpsr, state_dist, year, state_dist_party, lag_p, same_party, new_member)   |> kablebox()

dcounts_per_district %<>% mutate(same_party = as.numeric(same_party))
```


## Total Letters per District

The main results showing that replacing a more experienced legislator with a new legislator yields a substantial decrease in service to the district are robust to interacting all variables with the `same_party` variable. 
Cross-sectional effects get larger but more uncertain when data are subset to district years after turnover (as required for the `same_party` variable). Within-district effects become more uncertain, likely due to the much smaller number of observations where `same_party` can be observed. 


### Total District-level Coefficient Plots

Figures: `figs/m-district-[1:4].png`

1. cross-sectional 
2. cross-sectional with same-party variable 
3. diff-in-diff
4. diff-in-diff with same party variable

```{r}
#| layout-ncol: 2
#| fig-height: 4.5
#| fig-cap: "figs/m-district-[1:4].png"
#| fig-subcap: 
#|   - "1"
#|   - "2"
#|   - "3"
#|   - "4"
#| out-width: "100%"
#| label: "m-district"
#| fig-show: "hold"

# modify var names for presentation 
dcounts_per_district %<>% 
  mutate(same_party = as.numeric(same_party),
         Legislator = icpsr,
         District = state_dist,
         Year = year) %>% 
  filter(year >2006 & year < 2021)

m_district_cross <- feglm(perYear ~
  new_member + 
  second_year + third_year + fourth_year + fifth_year + sixth_year | Year,
cluster = "District",
data = dcounts_per_district)

if(testing){modelsummary::modelsummary(m_district_cross)}

coefplot(m_district_cross, horiz = T, drop = "(Intercept)", sub = "Reference = A member serving >6 years") 


m_district_cross_party <- feglm(perYear ~
  new_member*same_party + 
  second_year*same_party + third_year*same_party + fourth_year*same_party + fifth_year*same_party + sixth_year*same_party | Year,
cluster = "District",
data = dcounts_per_district)

if(testing){modelsummary::modelsummary(m_district_cross)}

coefplot(m_district_cross_party, horiz = T, drop = "(Intercept)", sub = "Reference = A member serving >6 years") 


# Diff in diff
m_district_dnd <- feglm(perYear ~
  new_member + #same_party + 
  second_year + third_year + fourth_year + fifth_year + sixth_year | 
    District + Year,
cluster = "District",
data = dcounts_per_district )

coefplot(m_district_dnd, horiz = T, drop = "(Intercept)", sub = "Reference = A member serving >6 years") 

# Diff in diff
m_district_dnd_party <- feglm(perYear ~
  new_member*same_party + 
  second_year*same_party + third_year*same_party + fourth_year*same_party + fifth_year*same_party + sixth_year*same_party | 
    District + Year,
cluster = "District",
data = dcounts_per_district )

coefplot(m_district_dnd_party, horiz = T, drop = "(Intercept)", sub = "Reference = A member serving >6 years") 



# Diff in diff
m_district_dnd_house <- feglm(perYear ~
  new_member + #same_party + 
  second_year + third_year + fourth_year + fifth_year + sixth_year | 
    District + Year,
cluster = "District",
data = dcounts_per_district |> filter(chamber == "House"))


# Diff in diff + party change var 
m_district_dnd_house_party <- feglm(perYear ~
  new_member*same_party + 
  second_year*same_party + third_year*same_party + fourth_year*same_party + fifth_year*same_party + sixth_year*same_party | 
    District + Year,
cluster = "District",
data = dcounts_per_district |> filter(chamber == "House"))

# Diff in diff
m_district_dnd_senate <- feglm(perYear ~
  new_member + #same_party + 
  second_year + third_year + fourth_year + fifth_year + sixth_year | 
    District + Year,
cluster = "District",
data = dcounts_per_district |> filter(chamber == "Senate"))


# Diff in diff + party change var 
m_district_dnd_senate_party <- feglm(perYear ~
  new_member*same_party + 
  second_year*same_party + third_year*same_party + fourth_year*same_party + fifth_year*same_party + sixth_year*same_party | 
    District + Year,
cluster = "District",
data = dcounts_per_district |> filter(chamber == "Senate"))

```

### Total Per District Tables

- Table: `tables/models_district.tex` 
- Models: `models/models_district.Rdata` 

```{r models_district}
models_district <- list(
  "(1)" = m_district_cross,
  "(2)" = m_district_dnd,
  "(3)" = m_district_dnd_house,
  "(4)" = m_district_dnd_senate
)


rows <- tibble(
  term = c("Dependent variable", 
           "All districts",
           "House only",
           "Senate only"),
  `(1)` = c("Per year", 
            "✓", 
            "", 
            ""),
  `(2)` =c("Per year", 
           "✓", 
            "", 
            ""),
    `(3)` = c("Per year", 
            "", 
            "✓", 
            ""),
  `(4)` =c("Per year", 
           #"✓", 
           "", 
            "", 
            "✓")
)



# Checkmarks for controls 
attr(rows, 'position') <- c(0, 14:16)



modelsummary(models_district,
             notes = list("Robust standard errors in parentheses, clustered by district.") )

# modelsummary::modelsummary(models_district, 
#              add_rows = rows,               
#              coef_map = cm, 
#              gof_map = gm, 
#              output = "latex",
#              notes = list(" Robust standard errors in parentheses, clustered by district.") ) %>% 
#   # format to match stata output (sort of)
#   format_table() %>%
#    write_lines(file = here::here("docs", "tables", "models_district.tex") )

beta <- m_district_dnd$coefficients %>%round(3) %>% as_tibble(rownames = "beta") %>% pivot_wider(names_from = beta)

beta_cross <- m_district_dnd$coefficients %>%round(3) %>% as_tibble(rownames = "beta") %>% pivot_wider(names_from = beta)


se <- m_district_dnd$se %>%round(3) %>% as_tibble(rownames = "se") %>% pivot_wider(names_from = se)

save(models_district, rows, cm, gm, coef_omit, beta, se,
     file = here::here("models", "models_district.Rdata"))
```


- Table: `tables/models_district_party.tex` 
- Models: `models/models_district_party.Rdata` 

```{r models_district_party}

models_district_party <- list(
  "(1)" = m_district_cross_party,
  "(2)" = m_district_dnd_party,
  "(3)" = m_district_dnd_house_party,
  "(4)" = m_district_dnd_senate_party
)


# Checkmarks for controls 
attr(rows, 'position') <- c(0, 28:31)



modelsummary(models_district_party, 
             notes = list("Robust standard errors in parentheses, clustered by district.") )
# 
# modelsummary::modelsummary(models_district_party, # stars = T, 
#              add_rows = rows,               
#              coef_map = cm, 
#              gof_map = gm, 
#              output = "latex",
#              notes = list(" Robust standard errors in parentheses, clustered by district.") ) %>% 
#   # format to match stata output (sort of)
#   format_table() %>%
#    write_lines(file = here::here("docs", "tables", "models_district_party.tex") )


save(models_district_party, rows, cm, gm, coef_omit, beta, se,
     file = here::here("models", "models_district_party.Rdata"))
```

### Total Per District Narrative 

To account for differences in district size, demographics, and demand for constituency service, Column 2 of Table `@tbl-models_district` provides the estimated effects from the difference-in-differences specification from Equation `@eq-district1`.
In this specification, we see a large causal effect of a new member taking over:  Electing a new member causes a district's constituency service to decrease by about 40\%, or `r -beta$new_member` letters per year (95-percent confidence interval [`r beta$new_member + se$new_member*1.96`, `r beta$new_member - se$new_member*1.96` ]). 

The effect of electing a new representative, however, dissipates quickly. Districts represented by a legislator in their second year of service receive significantly fewer contacts with federal agencies, but not as drastic as the difference observed in the first year. After the second year, the differences are smaller. This phenomenon--new legislators providing substantially fewer requests--persists when examining the House (Column 3) and the Senate (Column 4) separately. In short, new legislators make fewer contacts for their constituents than established legislators.  



### Total Per District Predictions 

- Figures: `figs/m-district-predicted-[1:4].png`

```{r}
#| layout-ncol: 2
#| fig-height: 3
#| fig-cap: "figs/m-district-predicted-[1:4].png"
#| fig-subcap: 
#|   - "1"
#|   - "2"
#|   - "3"
#|   - "4"
#| out-width: "100%"
#| label: "m-district-predicted"
#| fig-show: "hold"


ggdistrict <- function(predicted = predicted, party = FALSE) {
  
predicted %<>%
  # drop estimates from impossible values
      group_by(rowid, 
               #predicted, std.error, 
               estimate, conf.low, conf.high,
               same_party) %>% 
  mutate(sum = sum(new_member, second, third, fourth, fifth, sixth),
         more = ifelse(sum == 0, 1,0)) %>% 
    filter(sum < 2) %>% 
    pivot_longer(cols = c("new_member", "second", "third", "fourth", "fifth", "sixth", "more")) %>% 
    select(name, value) %>% 
    filter(value == 1) %>% 
    # clean up for presentation
    mutate(year_in_congress = name %>% 
             str_replace("more", "7\nor more") %>% 
             str_replace("sixth", "6") %>% 
             str_replace("fifth", "5") %>% 
             str_replace("fourth", "4") %>% 
             str_replace("third", "3") %>% 
             str_replace("second", "2") %>% 
             str_replace("new_member", " New\nmember") 
             ) %>% 
    ungroup()
  
# Ideally, we could plot against data, but there is so much variation that you can no longer distinguish differences in predicted values 
# predicted %<>% full_join(dcounts_tenure2 %>% mutate(predicted = NA))
  



p <- predicted %>%  
  ungroup() %>% 
  ggplot() + 
  aes(x = year_in_congress, 
            y = estimate, # predicted, 
      ymin = conf.low,# predicted - 1.96*std.error,
      ymax = conf.high) + 
  geom_pointrange(position =  position_dodge(width = -.3)  )  + 
  # geom_line() + # requires numeric...look to see how I did this on the other ones
  scale_fill_viridis_d(begin = 0, end = .6, option = "cividis") +
  scale_color_viridis_d(begin = 0, end = .6, option = "cividis") 

if(party){
p <- predicted %>%  
  mutate(same_party = as.logical(same_party)) %>% 
  ungroup() %>% 
  ggplot() + 
  aes(x = year_in_congress, 
            y = estimate, # predicted, 
      ymin = conf.low,# predicted - 1.96*std.error,
      ymax = conf.high, #predicted + 1.96*std.error,
      shape = same_party,
      color = same_party) + 
  geom_pointrange(position =  position_dodge(width = -.3)  )  + 
  scale_fill_viridis_d(begin = 0, end = .6, option = "cividis") +
  scale_color_viridis_d(begin = 0, end = .6, option = "cividis") 
}

return(p)
  
}


# dcounts_per_district %>% filter(District == "tennessee_1_1") |> View()
# dcounts_per_district %>% filter(District == "alabama_1_1") |> View()


# by year 
values <- tidyr::expand(dcounts_per_district,
                        new_member = new_member,
                        second_year = second_year,
                        third_year = third_year,
                        fourth_year = fourth_year,
                        fifth_year = fifth_year, 
                        sixth_year = sixth_year,
                        Legislator = "21376",
                        Year = "2016",
                        District = "alabama_1_1",
                        same_party = same_party
                   ) %>% 
  drop_na(same_party)

predicted <- predictions(m_district_cross,
                         newdata = values) %>% 
  rename(second = second_year,
         third = third_year,
         fourth = fourth_year,
         fifth = fifth_year,
         sixth = sixth_year)



# Cross-sectional predictions
predicted %>%
ggdistrict() +
  labs(title = "Letters Per District\n(Cross-Sectional)",
       x = "Years in congress",
       y = "Predicted letters per year",
       fill = "",
       color = "",
       shape = "") 



# Predictions with the party of the prior representative

predicted <- predictions(m_district_cross_party,
                         newdata = values) %>% 
  rename(second = second_year,
         third = third_year,
         fourth = fourth_year,
         fifth = fifth_year,
         sixth = sixth_year)

predicted %>%
  ggdistrict(party = TRUE) + 
  labs(title = "Letters Per District\n(Cross-Sectional)",
       x = "Years in Congress",
       y = "Predicted letters per year",
       fill = "",
       color = "Same Party",
       shape = "Same Party") 




# diff in diff plot

predicted <- predictions(m_district_dnd,
                         newdata = values) %>% 
  rename(second = second_year,
         third = third_year,
         fourth = fourth_year,
         fifth = fifth_year,
         sixth = sixth_year)


predicted %>%
ggdistrict() +
      geom_line(aes(x = as.numeric(year_in_congress %>% str_replace(" N", "1") %>% str_sub(1,1) ))) + 
  labs(title = "Letters Per District\n(Difference-in-differneces)",
       x = "Years in Congress",
       y = "Predicted letters per year",
       fill = "",
       color = "",
       shape = "")



# Predictions with the same party  

predicted <- predictions(m_district_dnd_party,
                         newdata = values) %>% #View()
  rename(second = second_year,
         third = third_year,
         fourth = fourth_year,
         fifth = fifth_year,
         sixth = sixth_year)

# diff in diff plot
predicted %>%
  ggdistrict(party = TRUE) +
        geom_line(aes(x = as.numeric(year_in_congress %>% str_replace(" N", "1") %>% str_sub(1,1) ))) + 
  labs(title = "Letters Per District\n(Difference-in-differences)",
       x = "Years in Congress",
       y = "Predicted letters per year",
       fill = "",
       color = "Same Party",
       shape = "Same Party")
```




### Total Per District Predictions (House only)

- Figures: `figs/m-district-predicted-house-[1:2].png`

```{r}
#| layout-ncol: 2
#| fig-height: 3
#| fig-cap: "figs/m-district-predicted-house-[1:2].png"
#| fig-subcap: 
#|   - "1"
#|   - "2"
#|   - "3"
#|   - "4"
#| out-width: "100%"
#| label: "m-district-predicted-house"
#| fig-show: "hold"




# diff in diff plot

predicted <- predictions(m_district_dnd_house,
                         newdata = values) %>% 
  rename(second = second_year,
         third = third_year,
         fourth = fourth_year,
         fifth = fifth_year,
         sixth = sixth_year)


predicted %>%
ggdistrict() +
        geom_line(aes(x = as.numeric(year_in_congress %>% str_replace(" N", "1") %>% str_sub(1,1) ))) + 
  labs(title = "Letters Per House District\n(Difference-in-differneces)",
       x = "Years in Congress",
       y = "Predicted letters per year",
       fill = "",
       color = "",
       shape = "")



# Predictions with the same party  

predicted <- predictions(m_district_dnd_house_party,
                         newdata = values) %>% #View()
  rename(second = second_year,
         third = third_year,
         fourth = fourth_year,
         fifth = fifth_year,
         sixth = sixth_year)

# diff in diff plot
predicted %>%
  ggdistrict(party = TRUE) +
        geom_line(aes(x = as.numeric(year_in_congress %>% str_replace(" N", "1") %>% str_sub(1,1) ))) + 
  labs(title = "Letters Per House District\n(Difference-in-differences)",
       x = "Years in Congress",
       y = "Predicted letters per year",
       fill = "",
       color = "Same Party",
       shape = "Same Party")
```





### Total Per District Predictions (Senate only)

- Figures: `figs/m-district-predicted-senate-[1:2].png`

```{r}
#| layout-ncol: 2
#| fig-height: 3
#| fig-cap: "figs/m-district-predicted-senate-[1:2].png"
#| fig-subcap: 
#|   - "1"
#|   - "2"
#|   - "3"
#|   - "4"
#| out-width: "100%"
#| label: "m-district-predicted-senate"
#| fig-show: "hold"


# Values for Senate seats 
values <- tidyr::expand(dcounts_per_district,
                        new_member = new_member,
                        second_year = second_year,
                        third_year = third_year,
                        fourth_year = fourth_year,
                        fifth_year = fifth_year, 
                        sixth_year = sixth_year,
                        Legislator = "49700",
                        Year = "2017",
                        District = "alabama_0",
                        same_party = same_party
                   ) %>% 
  drop_na(same_party)

# diff in diff plot

predicted <- predictions(m_district_dnd_senate,
                         newdata = values) %>% 
  rename(second = second_year,
         third = third_year,
         fourth = fourth_year,
         fifth = fifth_year,
         sixth = sixth_year)


predicted %>%
ggdistrict() +
        geom_line(aes(x = as.numeric(year_in_congress %>% str_replace(" N", "1") %>% str_sub(1,1) ))) + 
  labs(title = "Letters Per Senator\n(Difference-in-differneces)",
       x = "Years in Congress",
       y = "Predicted letters per year",
       fill = "",
       color = "",
       shape = "")



# Predictions with the same party  

predicted <- predictions(m_district_dnd_senate_party,
                         newdata = values) %>% #View()
  rename(second = second_year,
         third = third_year,
         fourth = fourth_year,
         fifth = fifth_year,
         sixth = sixth_year)

# diff in diff plot
predicted %>%
  ggdistrict(party = TRUE) +
        geom_line(aes(x = as.numeric(year_in_congress %>% str_replace(" N", "1") %>% str_sub(1,1) ))) + 
  labs(title = "Letters Per Senator\n(Difference-in-differences)",
       x = "Years in Congress",
       y = "Predicted letters per year",
       fill = "",
       color = "Same Party",
       shape = "Same Party")
```


## Constituency Service Letters per District

The main results showing that replacing a more experienced legislator with a new legislator yields a substantial decrease in service to the district are robust to interacting all variables with the `same_party` variable. 
Cross-sectional effects get larger but more uncertain when data are subset to district years after turnover (as required for the `same_party` variable). Within-district effects become more uncertain, likely due to the much smaller number of observations where `same_party` can be observed. 


### Constituency Service District-level Coefficient Plots

Figures: `figs/m-district-con-[1:4].png`

1. cross-sectional 
2. cross-sectional with same-party variable 
3. diff-in-diff
4. diff-in-diff with same party variable

```{r}
#| layout-ncol: 2
#| fig-height: 4.5
#| fig-cap: "figs/m-district-con-[1:4].png"
#| fig-subcap: 
#|   - "1"
#|   - "2"
#|   - "3"
#|   - "4"
#| out-width: "100%"
#| label: "m-district-con"
#| fig-show: "hold"



m_district_con_cross <- feglm(perYear_con ~
  new_member + 
  second_year + third_year + fourth_year + fifth_year + sixth_year | Year,
cluster = "District",
data = dcounts_per_district)

if(testing){modelsummary::modelsummary(m_district_con_cross)}

coefplot(m_district_con_cross, horiz = T, drop = "(Intercept)", sub = "Reference = A member serving >6 years") 


m_district_con_cross_party <- feglm(perYear_con ~
  new_member*same_party + 
  second_year*same_party + third_year*same_party + fourth_year*same_party + fifth_year*same_party + sixth_year*same_party | Year,
cluster = "District",
data = dcounts_per_district)

if(testing){modelsummary::modelsummary(m_district_con_cross)}

coefplot(m_district_con_cross_party, horiz = T, drop = "(Intercept)", sub = "Reference = A member serving >6 years") 


# Diff in diff
m_district_con_dnd <- feglm(perYear_con ~
  new_member + #same_party + 
  second_year + third_year + fourth_year + fifth_year + sixth_year | 
    District + Year,
cluster = "District",
data = dcounts_per_district )

coefplot(m_district_con_dnd, horiz = T, drop = "(Intercept)", sub = "Reference = A member serving >6 years") 

# Diff in diff
m_district_con_dnd_party <- feglm(perYear_con ~
  new_member*same_party + 
  second_year*same_party + third_year*same_party + fourth_year*same_party + fifth_year*same_party + sixth_year*same_party | 
    District + Year,
cluster = "District",
data = dcounts_per_district )

coefplot(m_district_con_dnd_party, horiz = T, drop = "(Intercept)", sub = "Reference = A member serving >6 years") 



# Diff in diff
m_district_con_dnd_house <- feglm(perYear_con ~
  new_member + #same_party + 
  second_year + third_year + fourth_year + fifth_year + sixth_year | 
    District + Year,
cluster = "District",
data = dcounts_per_district |> filter(chamber == "House"))


# Diff in diff + party change var 
m_district_con_dnd_house_party <- feglm(perYear_con ~
  new_member*same_party + 
  second_year*same_party + third_year*same_party + fourth_year*same_party + fifth_year*same_party + sixth_year*same_party | 
    District + Year,
cluster = "District",
data = dcounts_per_district |> filter(chamber == "House"))

# Diff in diff
m_district_con_dnd_senate <- feglm(perYear_con ~
  new_member + #same_party + 
  second_year + third_year + fourth_year + fifth_year + sixth_year | 
    District + Year,
cluster = "District",
data = dcounts_per_district |> filter(chamber == "Senate"))


# Diff in diff + party change var 
m_district_con_dnd_senate_party <- feglm(perYear_con ~
  new_member*same_party + 
  second_year*same_party + third_year*same_party + fourth_year*same_party + fifth_year*same_party + sixth_year*same_party | 
    District + Year,
cluster = "District",
data = dcounts_per_district |> filter(chamber == "Senate"))

```

### Constituency Service Per District Tables

- Table: `tables/models_district_con.tex` 
- Models: `models/models_district_con.Rdata` 

```{r models_district_con}
models_district_con <- list(
  "(1)" = m_district_con_cross,
  "(2)" = m_district_con_dnd,
  "(3)" = m_district_con_dnd_house,
  "(4)" = m_district_con_dnd_senate
)


rows <- tibble(
  term = c("Dependent variable", 
           "All districts",
           "House only",
           "Senate only"),
  `(1)` = c("Per year", 
            "✓", 
            "", 
            ""),
  `(2)` =c("Per year", 
           "✓", 
            "", 
            ""),
    `(3)` = c("Per year", 
            "", 
            "✓", 
            ""),
  `(4)` =c("Per year", 
           "", 
            "", 
            "✓")
)



# Checkmarks for controls 
attr(rows, 'position') <- c(0, 14:16)



modelsummary(models_district_con, 
             notes = list("Robust standard errors in parentheses, clustered by district.") ) 

# modelsummary::modelsummary(models_district_con, # stars = T, 
#              add_rows = rows,               
#              coef_map = cm, 
#              gof_map = gm, 
#              output = "latex",
#              notes = list(" Robust standard errors in parentheses, clustered by district.") ) %>% 
#   # format to match stata output (sort of)
#   format_table() %>%
#    write_lines(file = here::here("docs", "tables", "models_district_con.tex") )

beta <- m_district_con_dnd$coefficients %>%round(3) %>% as_tibble(rownames = "beta") %>% pivot_wider(names_from = beta)

beta_cross <- m_district_con_dnd$coefficients %>%round(3) %>% as_tibble(rownames = "beta") %>% pivot_wider(names_from = beta)


se <- m_district_con_dnd$se %>%round(3) %>% as_tibble(rownames = "se") %>% pivot_wider(names_from = se)

save(models_district_con, rows, cm, gm, coef_omit, beta, se,
     file = here::here("models", "models_district_con.Rdata"))
```


- Table: `tables/models_district_con_party.tex` 
- Models: `models/models_district_con_party.Rdata` 

```{r models_district_con_party}

models_district_con_party <- list(
  "(1)" = m_district_con_cross_party,
  "(2)" = m_district_con_dnd_party,
  "(3)" = m_district_con_dnd_house_party,
  "(4)" = m_district_con_dnd_senate_party
)


# Checkmarks for controls 
attr(rows, 'position') <- c(0, 28:31)



modelsummary(models_district_con_party, 
             notes = list("Robust standard errors in parentheses, clustered by district.") ) 
# 
# modelsummary::modelsummary(models_district_con_party, # stars = T, 
#              add_rows = rows,               
#              coef_map = cm, 
#              gof_map = gm, 
#              
#              output = "latex",
#              notes = list(" Robust standard errors in parentheses, clustered by district.") ) %>% 
#   # format to match stata output (sort of)
#   format_table() %>%
#    write_lines(file = here::here("docs", "tables", "models_district_con_party.tex") )


save(models_district_con_party, rows, cm, gm, coef_omit, beta, se,
     file = here::here("models", "models_district_con_party.Rdata"))
```

### Constituency Service Per District Narrative 

To account for differences in district size, demographics, and demand for constituency service, Column 2 of Table `@tbl-models_district_con` provides the estimated effects from the difference-in-differences specification from Equation `@eq-district1`.
In this specification, we see a large causal effect of a new member taking over:  Electing a new member causes a district's constituency service to decrease by `r -beta$new_member` letters per year (95-percent confidence interval [`r beta$new_member + se$new_member*1.96`, `r beta$new_member - se$new_member*1.96` ]). 

The effect of electing a new representative, however, dissipates quickly. Districts represented by a legislator in their second year of service receive significantly fewer contacts with federal agencies, but not as drastic as the difference observed in the first year. After the second year, the differences are smaller. This phenomenon--new legislators providing substantially fewer requests--persists when examining the Senate (Column 4) separately. When examining the House separately, the pattern is similar but slightly different; members make few constituency service requests in their first two years before increasing to a higher level in years 3-6 and then possibly decreasing after that (since seven or more years in office is the reference category, we don't have uncertainty bounds around this estimate).  In short, new legislators make fewer contacts for their constituents than established legislators.  



### Constituency Service Per District Predictions 

- Figures: `figs/m-district-con-predicted-[1:4].png`

```{r}
#| layout-ncol: 2
#| fig-height: 3
#| fig-cap: "figs/m-district-con-predicted-[1:4].png"
#| fig-subcap: 
#|   - "1"
#|   - "2"
#|   - "3"
#|   - "4"
#| out-width: "100%"
#| label: "m-district-con-predicted"
#| fig-show: "hold"


ggdistrict <- function(predicted = predicted, party = FALSE) {
  
predicted %<>%
  # drop estimates from impossible values
      group_by(rowid, 
               #predicted, std.error, 
               estimate, conf.low, conf.high,
               same_party) %>% 
  mutate(sum = sum(new_member, second, third, fourth, fifth, sixth),
         more = ifelse(sum == 0, 1,0)) %>% 
    filter(sum < 2) %>% 
    pivot_longer(cols = c("new_member", "second", "third", "fourth", "fifth", "sixth", "more")) %>% 
    select(name, value) %>% 
    filter(value == 1) %>% 
    # clean up for presentation
    mutate(year_in_congress = name %>% 
             str_replace("more", "7\nor more") %>% 
             str_replace("sixth", "6") %>% 
             str_replace("fifth", "5") %>% 
             str_replace("fourth", "4") %>% 
             str_replace("third", "3") %>% 
             str_replace("second", "2") %>% 
             str_replace("new_member", " New\nmember") 
             ) %>% 
    ungroup()
  
# Ideally, we could plot against data, but there is so much variation that you can no longer distinguish differences in predicted values 
# predicted %<>% full_join(dcounts_tenure2 %>% mutate(predicted = NA))
  



p <- predicted %>%  
  ungroup() %>% 
  ggplot() + 
  aes(x = year_in_congress, 
            y = estimate, # predicted, 
      ymin = conf.low,# predicted - 1.96*std.error,
      ymax = conf.high) + 
  geom_pointrange(position =  position_dodge(width = -.3)  )  + 
  # geom_line() + # requires numeric...look to see how I did this on the other ones
  scale_fill_viridis_d(begin = 0, end = .6, option = "cividis") +
  scale_color_viridis_d(begin = 0, end = .6, option = "cividis") 

if(party){
p <- predicted %>%  
  mutate(same_party = as.logical(same_party)) %>% 
  ungroup() %>% 
  ggplot() + 
  aes(x = year_in_congress, 
            y = estimate, # predicted, 
      ymin = conf.low,# predicted - 1.96*std.error,
      ymax = conf.high, #predicted + 1.96*std.error,
      shape = same_party,
      color = same_party) + 
  geom_pointrange(position =  position_dodge(width = -.3)  )  + 
  scale_fill_viridis_d(begin = 0, end = .6, option = "cividis") +
  scale_color_viridis_d(begin = 0, end = .6, option = "cividis") 
}

return(p)
  
}


# dcounts_per_district %>% filter(District == "tennessee_1_1") |> View()
# dcounts_per_district %>% filter(District == "alabama_1_1") |> View()


# by year 
values <- tidyr::expand(dcounts_per_district,
                        new_member = new_member,
                        second_year = second_year,
                        third_year = third_year,
                        fourth_year = fourth_year,
                        fifth_year = fifth_year, 
                        sixth_year = sixth_year,
                        Legislator = "21376",
                        Year = "2016",
                        District = "alabama_1_1",
                        same_party = same_party
                   ) %>% 
  drop_na(same_party)

predicted <- predictions(m_district_con_cross,
                         newdata = values) %>% 
  rename(second = second_year,
         third = third_year,
         fourth = fourth_year,
         fifth = fifth_year,
         sixth = sixth_year)



# Cross-sectional predictions
predicted %>%
ggdistrict() +
  labs(title = "Letters Per District\n(Cross-Sectional)",
       x = "Years in congress",
       y = "Predicted letters per year\n(Constituency service only)",
       fill = "",
       color = "",
       shape = "") 



# Predictions with the party of the prior representative

predicted <- predictions(m_district_con_cross_party,
                         newdata = values) %>% 
  rename(second = second_year,
         third = third_year,
         fourth = fourth_year,
         fifth = fifth_year,
         sixth = sixth_year)

predicted %>%
  ggdistrict(party = TRUE) + 
  labs(title = "Letters Per District\n(Cross-Sectional)",
       x = "Years in Congress",
              y = "Predicted letters per year\n(Constituency service only)",
       fill = "",
       color = "Same Party",
       shape = "Same Party") 




# diff in diff plot

predicted <- predictions(m_district_con_dnd,
                         newdata = values) %>% 
  rename(second = second_year,
         third = third_year,
         fourth = fourth_year,
         fifth = fifth_year,
         sixth = sixth_year)


predicted %>%
ggdistrict() +
      geom_line(aes(x = as.numeric(year_in_congress %>% str_replace(" N", "1") %>% str_sub(1,1) ))) + 
  labs(title = "Letters Per District\n(Difference-in-differneces)",
       x = "Years in Congress",
              y = "Predicted letters per year\n(Constituency service only)",
       fill = "",
       color = "",
       shape = "")



# Predictions with the same party  

predicted <- predictions(m_district_con_dnd_party,
                         newdata = values) %>% #View()
  rename(second = second_year,
         third = third_year,
         fourth = fourth_year,
         fifth = fifth_year,
         sixth = sixth_year)

# diff in diff plot
predicted %>%
  ggdistrict(party = TRUE) +
        geom_line(aes(x = as.numeric(year_in_congress %>% str_replace(" N", "1") %>% str_sub(1,1) ))) + 
  labs(title = "Letters Per District\n(Difference-in-differences)",
       x = "Years in Congress",
              y = "Predicted letters per year\n(Constituency service only)",
       fill = "",
       color = "Same Party",
       shape = "Same Party")
```




### Constituency Service Per District Predictions (House only)

- Figures: `figs/m-district-con-predicted-house-[1:2].png`

```{r}
#| layout-ncol: 2
#| fig-height: 3
#| fig-cap: "figs/m-district-con-predicted-house-[1:2].png"
#| fig-subcap: 
#|   - "1"
#|   - "2"
#|   - "3"
#|   - "4"
#| out-width: "100%"
#| label: "m-district-con-predicted-house"
#| fig-show: "hold"




# diff in diff plot

predicted <- predictions(m_district_con_dnd_house,
                         newdata = values) %>% 
  rename(second = second_year,
         third = third_year,
         fourth = fourth_year,
         fifth = fifth_year,
         sixth = sixth_year)


predicted %>%
ggdistrict() +
        geom_line(aes(x = as.numeric(year_in_congress %>% str_replace(" N", "1") %>% str_sub(1,1) ))) + 
  labs(title = "Letters Per House District\n(Difference-in-differneces)",
       x = "Years in Congress",
              y = "Predicted letters per year\n(Constituency service only)",
       fill = "",
       color = "",
       shape = "")



# Predictions with the same party  

predicted <- predictions(m_district_con_dnd_house_party,
                         newdata = values) %>% #View()
  rename(second = second_year,
         third = third_year,
         fourth = fourth_year,
         fifth = fifth_year,
         sixth = sixth_year)

# diff in diff plot
predicted %>%
  ggdistrict(party = TRUE) +
        geom_line(aes(x = as.numeric(year_in_congress %>% str_replace(" N", "1") %>% str_sub(1,1) ))) + 
  labs(title = "Letters Per House District\n(Difference-in-differences)",
       x = "Years in Congress",
              y = "Predicted letters per year\n(Constituency service only)",
       fill = "",
       color = "Same Party",
       shape = "Same Party")
```





### Constituency Service Per District Predictions (Senate only)

- Figures: `figs/m-district-con-predicted-senate-[1:2].png`

```{r}
#| layout-ncol: 2
#| fig-height: 3
#| fig-cap: "figs/m-district-con-predicted-senate-[1:2].png"
#| fig-subcap: 
#|   - "1"
#|   - "2"
#|   - "3"
#|   - "4"
#| out-width: "100%"
#| label: "m-district-con-predicted-senate"
#| fig-show: "hold"


# Values for Senate seats 
values <- tidyr::expand(dcounts_per_district,
                        new_member = new_member,
                        second_year = second_year,
                        third_year = third_year,
                        fourth_year = fourth_year,
                        fifth_year = fifth_year, 
                        sixth_year = sixth_year,
                        Legislator = "49700",
                        Year = "2017",
                        District = "alabama_0",
                        same_party = same_party
                   ) %>% 
  drop_na(same_party)

# diff in diff plot

predicted <- predictions(m_district_con_dnd_senate,
                         newdata = values) %>% 
  rename(second = second_year,
         third = third_year,
         fourth = fourth_year,
         fifth = fifth_year,
         sixth = sixth_year)


predicted %>%
ggdistrict() +
        geom_line(aes(x = as.numeric(year_in_congress %>% str_replace(" N", "1") %>% str_sub(1,1) ))) + 
  labs(title = "Letters Per Senator\n(Difference-in-differneces)",
       x = "Years in Congress",
              y = "Predicted letters per year\n(Constituency service only)",
       fill = "",
       color = "",
       shape = "")



# Predictions with the same party  

predicted <- predictions(m_district_con_dnd_senate_party,
                         newdata = values) %>% #View()
  rename(second = second_year,
         third = third_year,
         fourth = fourth_year,
         fifth = fifth_year,
         sixth = sixth_year)

# diff in diff plot
predicted %>%
  ggdistrict(party = TRUE) +
        geom_line(aes(x = as.numeric(year_in_congress %>% str_replace(" N", "1") %>% str_sub(1,1) ))) + 
  labs(title = "Letters Per Senator\n(Difference-in-differences)",
       x = "Years in Congress",
              y = "Predicted letters per year\n(Constituency service only)",
       fill = "",
       color = "Same Party",
       shape = "Same Party")
```




## Policy Letters per District

The main results showing that replacing a more experienced legislator with a new legislator yields a substantial decrease in policy work to the district are robust to interacting all variables with the `same_party` variable. 
Cross-sectional effects get larger but more uncertain when data are subset to district years after turnover (as required for the `same_party` variable). Within-district effects become more uncertain, likely due to the much smaller number of observations where `same_party` can be observed. 


### Policy District-level Coefficient Plots

Figures: `figs/m-district-policy-[1:4].png`

1. cross-sectional 
2. cross-sectional with same-party variable 
3. diff-in-diff
4. diff-in-diff with same party variable

```{r}
#| layout-ncol: 2
#| fig-height: 4.5
#| fig-cap: "figs/m-district-policy-[1:4].png"
#| fig-subcap: 
#|   - "1"
#|   - "2"
#|   - "3"
#|   - "4"
#| out-width: "100%"
#| label: "m-district-policy"
#| fig-show: "hold"



m_district_policy_cross <- feglm(perYear_policy ~
  new_member + 
  second_year + third_year + fourth_year + fifth_year + sixth_year | Year,
cluster = "District",
data = dcounts_per_district)

if(testing){modelsummary::modelsummary(m_district_policy_cross)}

coefplot(m_district_policy_cross, horiz = T, drop = "(Intercept)", sub = "Reference = A member serving >6 years") 


m_district_policy_cross_party <- feglm(perYear_policy ~
  new_member*same_party + 
  second_year*same_party + third_year*same_party + fourth_year*same_party + fifth_year*same_party + sixth_year*same_party | Year,
cluster = "District",
data = dcounts_per_district)

if(testing){modelsummary::modelsummary(m_district_policy_cross)}

coefplot(m_district_policy_cross_party, horiz = T, drop = "(Intercept)", sub = "Reference = A member serving >6 years") 


# Diff in diff
m_district_policy_dnd <- feglm(perYear_policy ~
  new_member + #same_party + 
  second_year + third_year + fourth_year + fifth_year + sixth_year | 
    District + Year,
cluster = "District",
data = dcounts_per_district )

coefplot(m_district_policy_dnd, horiz = T, drop = "(Intercept)", sub = "Reference = A member serving >6 years") 

# Diff in diff
m_district_policy_dnd_party <- feglm(perYear_policy ~
  new_member*same_party + 
  second_year*same_party + third_year*same_party + fourth_year*same_party + fifth_year*same_party + sixth_year*same_party | 
    District + Year,
cluster = "District",
data = dcounts_per_district )

coefplot(m_district_policy_dnd_party, horiz = T, drop = "(Intercept)", sub = "Reference = A member serving >6 years") 



# Diff in diff
m_district_policy_dnd_house <- feglm(perYear_policy ~
  new_member + #same_party + 
  second_year + third_year + fourth_year + fifth_year + sixth_year | 
    District + Year,
cluster = "District",
data = dcounts_per_district |> filter(chamber == "House"))


# Diff in diff + party change var 
m_district_policy_dnd_house_party <- feglm(perYear_policy ~
  new_member*same_party + 
  second_year*same_party + third_year*same_party + fourth_year*same_party + fifth_year*same_party + sixth_year*same_party | 
    District + Year,
cluster = "District",
data = dcounts_per_district |> filter(chamber == "House"))

# Diff in diff
m_district_policy_dnd_senate <- feglm(perYear_policy ~
  new_member + #same_party + 
  second_year + third_year + fourth_year + fifth_year + sixth_year | 
    District + Year,
cluster = "District",
data = dcounts_per_district |> filter(chamber == "Senate"))


# Diff in diff + party change var 
m_district_policy_dnd_senate_party <- feglm(perYear_policy ~
  new_member*same_party + 
  second_year*same_party + third_year*same_party + fourth_year*same_party + fifth_year*same_party + sixth_year*same_party | 
    District + Year,
cluster = "District",
data = dcounts_per_district |> filter(chamber == "Senate"))

```

### Policy Per District Tables

- Table: `tables/models_district_policy.tex` 
- Models: `models/models_district_policy.Rdata` 

```{r models_district_policy}
models_district_policy <- list(
  "(1)" = m_district_policy_cross,
  "(2)" = m_district_policy_dnd,
  "(3)" = m_district_policy_dnd_house,
  "(4)" = m_district_policy_dnd_senate
)


rows <- tibble(
  term = c("Dependent variable", 
           "All districts",
           "House only",
           "Senate only"),
  `(1)` = c("Per year", 
            "✓", 
            "", 
            ""),
  `(2)` =c("Per year", 
           "✓", 
            "", 
            ""),
    `(3)` = c("Per year", 
            "", 
            "✓", 
            ""),
  `(4)` =c("Per year", 
           #"✓", 
           "", 
            "", 
            "✓")
)



# Checkmarks for controls 
attr(rows, 'position') <- c(0, 14:16)



modelsummary(models_district_policy, 
             notes = list("Robust standard errors in parentheses, clustered by district.") ) 

# modelsummary::modelsummary(models_district_policy, # stars = T, 
#              add_rows = rows,               
#              coef_map = cm, 
#              gof_map = gm, 
#              
#              output = "latex",
#              notes = list(" Robust standard errors in parentheses, clustered by district.") ) %>% 
#   # format to match stata output (sort of)
#   format_table() %>%
#    write_lines(file = here::here("docs", "tables", "models_district_policy.tex") )

beta <- m_district_policy_dnd$coefficients %>%round(3) %>% as_tibble(rownames = "beta") %>% pivot_wider(names_from = beta)

beta_cross <- m_district_policy_dnd$coefficients %>%round(3) %>% as_tibble(rownames = "beta") %>% pivot_wider(names_from = beta)


se <- m_district_policy_dnd$se %>%round(3) %>% as_tibble(rownames = "se") %>% pivot_wider(names_from = se)

save(models_district_policy, rows, cm, gm, coef_omit, beta, se,
     file = here::here("models", "models_district_policy.Rdata"))
```


- Table: `tables/models_district_policy_party.tex` 
- Models: `models/models_district_policy_party.Rdata` 

```{r models_district_policy_party}

models_district_policy_party <- list(
  "(1)" = m_district_policy_cross_party,
  "(2)" = m_district_policy_dnd_party,
  "(3)" = m_district_policy_dnd_house_party,
  "(4)" = m_district_policy_dnd_senate_party
)


# Checkmarks for controls 
attr(rows, 'position') <- c(0, 28:31)



modelsummary(models_district_policy_party, 
             notes = list("Robust standard errors in parentheses, clustered by district.") ) 

# modelsummary::modelsummary(models_district_policy_party, # stars = T, 
#              add_rows = rows,               
#              coef_map = cm, 
#              gof_map = gm, 
#              
#              output = "latex",
#              notes = list(" Robust standard errors in parentheses, clustered by district.") ) %>% 
#   # format to match stata output (sort of)
#   format_table() %>%
#    write_lines(file = here::here("docs", "tables", "models_district_policy_party.tex") )


save(models_district_policy_party, rows, cm, gm, coef_omit, beta, se,
     file = here::here("models", "models_district_policy_party.Rdata"))
```

### Policy Per District Narrative 

To account for differences in district size, demographics, and demand for Policy, Column 2 of Table `@tbl-models_district_policy` provides the estimated effects from the difference-in-differences specification from Equation `@eq-district1`.
In this specification, we see a large causal effect of a new member taking over:  Electing a new member causes a district's Policy to decrease by `r -beta$new_member` letters per year (95-percent confidence interval [`r beta$new_member + se$new_member*1.96`, `r beta$new_member - se$new_member*1.96` ]). 

The effect of electing a new representative, however, dissipates quickly. Districts represented by a legislator in their second year of service receive significantly fewer policy-related contacts with federal agencies, but not as drastic as the difference observed in the first year. After the second year, the differences are smaller. This phenomenon--new legislators providing substantially fewer requests--persists when examining the House (Column 3) and the Senate (Column 4) separately. In short, new legislators make fewer policy-related contacts than established legislators.  



### Policy Per District Predictions 

- Figures: `figs/m-district-policy-predicted-[1:4].png`

```{r}
#| layout-ncol: 2
#| fig-height: 3
#| fig-cap: "figs/m-district-policy-predicted-[1:4].png"
#| fig-subcap: 
#|   - "1"
#|   - "2"
#|   - "3"
#|   - "4"
#| out-width: "100%"
#| label: "m-district-policy-predicted"
#| fig-show: "hold"


ggdistrict <- function(predicted = predicted, party = FALSE) {
  
predicted %<>%
  # drop estimates from impossible values
      group_by(rowid, 
               #predicted, std.error, 
               estimate, conf.low, conf.high,
               same_party) %>% 
  mutate(sum = sum(new_member, second, third, fourth, fifth, sixth),
         more = ifelse(sum == 0, 1,0)) %>% 
    filter(sum < 2) %>% 
    pivot_longer(cols = c("new_member", "second", "third", "fourth", "fifth", "sixth", "more")) %>% 
    select(name, value) %>% 
    filter(value == 1) %>% 
    # clean up for presentation
    mutate(year_in_policygress = name %>% 
             str_replace("more", "7\nor more") %>% 
             str_replace("sixth", "6") %>% 
             str_replace("fifth", "5") %>% 
             str_replace("fourth", "4") %>% 
             str_replace("third", "3") %>% 
             str_replace("second", "2") %>% 
             str_replace("new_member", " New\nmember") 
             ) %>% 
    ungroup()
  
# Ideally, we could plot against data, but there is so much variation that you can no longer distinguish differences in predicted values 
# predicted %<>% full_join(dcounts_tenure2 %>% mutate(predicted = NA))
  



p <- predicted %>%  
  ungroup() %>% 
  ggplot() + 
  aes(x = year_in_policygress, 
            y = estimate, # predicted, 
      ymin = conf.low,# predicted - 1.96*std.error,
      ymax = conf.high) + 
  geom_pointrange(position =  position_dodge(width = -.3)  )  + 
  # geom_line() + # requires numeric...look to see how I did this on the other ones
  scale_fill_viridis_d(begin = 0, end = .6, option = "cividis") +
  scale_color_viridis_d(begin = 0, end = .6, option = "cividis") 

if(party){
p <- predicted %>%  
  mutate(same_party = as.logical(same_party)) %>% 
  ungroup() %>% 
  ggplot() + 
  aes(x = year_in_policygress, 
            y = estimate, # predicted, 
      ymin = conf.low,# predicted - 1.96*std.error,
      ymax = conf.high, #predicted + 1.96*std.error,
      shape = same_party,
      color = same_party) + 
  geom_pointrange(position =  position_dodge(width = -.3)  )  + 
  scale_fill_viridis_d(begin = 0, end = .6, option = "cividis") +
  scale_color_viridis_d(begin = 0, end = .6, option = "cividis") 
}

return(p)
  
}


# dcounts_per_district %>% filter(District == "tennessee_1_1") |> View()
# dcounts_per_district %>% filter(District == "alabama_1_1") |> View()


# by year 
values <- tidyr::expand(dcounts_per_district,
                        new_member = new_member,
                        second_year = second_year,
                        third_year = third_year,
                        fourth_year = fourth_year,
                        fifth_year = fifth_year, 
                        sixth_year = sixth_year,
                        Legislator = "21376",
                        Year = "2016",
                        District = "alabama_1_1",
                        same_party = same_party
                   ) %>% 
  drop_na(same_party)

predicted <- predictions(m_district_policy_cross,
                         newdata = values) %>% 
  rename(second = second_year,
         third = third_year,
         fourth = fourth_year,
         fifth = fifth_year,
         sixth = sixth_year)



# Cross-sectional predictions
predicted %>%
ggdistrict() +
  labs(title = "Letters Per District\n(Cross-Sectional)",
       x = "Years in congress",
       y = "Predicted letters per year\n(Policy only)",
       fill = "",
       color = "",
       shape = "") 



# Predictions with the party of the prior representative
predicted <- predictions(m_district_policy_cross_party,
                         newdata = values) %>% 
  rename(second = second_year,
         third = third_year,
         fourth = fourth_year,
         fifth = fifth_year,
         sixth = sixth_year)

predicted %>%
  ggdistrict(party = TRUE) + 
  labs(title = "Letters Per District\n(Cross-Sectional)",
       x = "Years in Congress",
              y = "Predicted letters per year\n(Policy only)",
       fill = "",
       color = "Same Party",
       shape = "Same Party") 




# diff in diff plot
predicted <- predictions(m_district_policy_dnd,
                         newdata = values) %>% 
  rename(second = second_year,
         third = third_year,
         fourth = fourth_year,
         fifth = fifth_year,
         sixth = sixth_year)


predicted %>%
ggdistrict() +
      geom_line(aes(x = as.numeric(year_in_policygress %>% str_replace(" N", "1") %>% str_sub(1,1) ))) + 
  labs(title = "Letters Per District\n(Difference-in-differneces)",
       x = "Years in Congress",
              y = "Predicted letters per year\n(Policy only)",
       fill = "",
       color = "",
       shape = "")



# Predictions with the same party  
predicted <- predictions(m_district_policy_dnd_party,
                         newdata = values) %>% #View()
  rename(second = second_year,
         third = third_year,
         fourth = fourth_year,
         fifth = fifth_year,
         sixth = sixth_year)

# diff in diff plot
predicted %>%
  ggdistrict(party = TRUE) +
        geom_line(aes(x = as.numeric(year_in_policygress %>% str_replace(" N", "1") %>% str_sub(1,1) ))) + 
  labs(title = "Letters Per District\n(Difference-in-differences)",
       x = "Years in Congress",
              y = "Predicted letters per year\n(Policy only)",
       fill = "",
       color = "Same Party",
       shape = "Same Party")
```




### Policy Per District Predictions (House only)

- Figures: `figs/m-district-policy-predicted-house-[1:2].png`

```{r}
#| layout-ncol: 2
#| fig-height: 3
#| fig-cap: "figs/m-district-policy-predicted-house-[1:2].png"
#| fig-subcap: 
#|   - "1"
#|   - "2"
#|   - "3"
#|   - "4"
#| out-width: "100%"
#| label: "m-district-policy-predicted-house"
#| fig-show: "hold"




# diff in diff plot
predicted <- predictions(m_district_policy_dnd_house,
                         newdata = values) %>% 
  rename(second = second_year,
         third = third_year,
         fourth = fourth_year,
         fifth = fifth_year,
         sixth = sixth_year)


predicted %>%
ggdistrict() +
        geom_line(aes(x = as.numeric(year_in_policygress %>% str_replace(" N", "1") %>% str_sub(1,1) ))) + 
  labs(title = "Letters Per House District\n(Difference-in-differneces)",
       x = "Years in Congress",
              y = "Predicted letters per year\n(Policy only)",
       fill = "",
       color = "",
       shape = "")



# Predictions with the same party  
predicted <- predictions(m_district_policy_dnd_house_party,
                         newdata = values) %>% #View()
  rename(second = second_year,
         third = third_year,
         fourth = fourth_year,
         fifth = fifth_year,
         sixth = sixth_year)

# diff in diff plot
predicted %>%
  ggdistrict(party = TRUE) +
        geom_line(aes(x = as.numeric(year_in_policygress %>% str_replace(" N", "1") %>% str_sub(1,1) ))) + 
  labs(title = "Letters Per House District\n(Difference-in-differences)",
       x = "Years in Congress",
              y = "Predicted letters per year\n(Policy only)",
       fill = "",
       color = "Same Party",
       shape = "Same Party")
```





### Policy Per District Predictions (Senate only)

- Figures: `figs/m-district-policy-predicted-senate-[1:2].png`

```{r}
#| layout-ncol: 2
#| fig-height: 3
#| fig-cap: "figs/m-district-policy-predicted-senate-[1:2].png"
#| fig-subcap: 
#|   - "1"
#|   - "2"
#|   - "3"
#|   - "4"
#| out-width: "100%"
#| label: "m-district-policy-predicted-senate"
#| fig-show: "hold"


# Values for Senate seats 
values <- tidyr::expand(dcounts_per_district,
                        new_member = new_member,
                        second_year = second_year,
                        third_year = third_year,
                        fourth_year = fourth_year,
                        fifth_year = fifth_year, 
                        sixth_year = sixth_year,
                        Legislator = "49700",
                        Year = "2017",
                        District = "alabama_0",
                        same_party = same_party
                   ) %>% 
  drop_na(same_party)

# diff in diff plot
predicted <- predictions(m_district_policy_dnd_senate,
                         newdata = values) %>% 
  rename(second = second_year,
         third = third_year,
         fourth = fourth_year,
         fifth = fifth_year,
         sixth = sixth_year)


predicted %>%
ggdistrict() +
        geom_line(aes(x = as.numeric(year_in_policygress %>% str_replace(" N", "1") %>% str_sub(1,1) ))) + 
  labs(title = "Letters Per Senator\n(Difference-in-differneces)",
       x = "Years in Congress",
              y = "Predicted letters per year\n(Policy only)",
       fill = "",
       color = "",
       shape = "")



# Predictions with the same party  
predicted <- predictions(m_district_policy_dnd_senate_party,
                         newdata = values) %>% #View()
  rename(second = second_year,
         third = third_year,
         fourth = fourth_year,
         fifth = fifth_year,
         sixth = sixth_year)

# diff in diff plot
predicted %>%
  ggdistrict(party = TRUE) +
        geom_line(aes(x = as.numeric(year_in_policygress %>% str_replace(" N", "1") %>% str_sub(1,1) ))) + 
  labs(title = "Letters Per Senator\n(Difference-in-differences)",
       x = "Years in Congress",
              y = "Predicted letters per year\n(Policy only)",
       fill = "",
       color = "Same Party",
       shape = "Same Party")
```



# Spillover Effects Robustness Check

This is a robustness check for an observable implication of demand-driven behavior. If variation in constituent demand drives variation in legislator behavior (specifically a preference for more senior members), then we should observe spillover effects on the rest of a delegation when an experienced member is replaced with a new member. That is, if people demand more from experienced members, people should redirect demand to the next most experienced member who represents them.

```{r spillover-data}

# new IVs: new_senator, new_proportion, new_one

dcounts_spillover <- dcounts_per_district %>% 
  # FIRST, identify districts with new members 
  group_by(state, Year) %>% 
  # size of the delegation 
  add_count(name = "n_delegation") %>% 
  mutate(
    # new IVs:
    new_senator = ifelse(chamber == "Senate" & new_member == 1, 1, NA), 
    new_proportion = sum(new_member)/n_delegation, 
    new_one = ifelse(new_member == 1, 1, NA)
  ) %>% 
  fill(new_senator, .direction = "updown") %>% 
  fill(new_one, .direction = "updown") %>% 
  mutate(new_senator =   replace_na(new_senator, 0),
         new_one = replace_na(new_one, 0) 
  ) %>% 
  group_by(state, Year, chamber) %>% 
  arrange(year, state) 

  # THEN WE DROP ALL OF THE NEW MEMBERS 
dcounts_spillover %<>%   filter(new_member == 0)  


# # inspect data 
# dcounts_spillover |> select(Year, state, chamber, new_member, new_one, new_senator, new_proportion, perYear) |> ungroup() |>
#   #filter(new_senator ==1) |>  
#   #count(new_senator, new_member) |> 
#   kablebox_long()
#     

```


<!-- NOT WORTH PLOTTING 
### Spillover Coefficient Plots

Figures: `figs/m-spillover-[1:3].png`

1. diff-in-diff, at least one **new Senator** in the delegation effect
2. diff-in-diff, **proportion** of new legislators in the delegation effect **on Senators**
3. diff-in-diff, at least one **new legislator** in the delegation effect **on Senators**
--> 

```{r}
#| layout-ncol: 2
#| fig-height: 4.5
#| fig-cap: "figs/m-spillover-[1:3].png"
#| fig-subcap: 
#|   - "1"
#|   - "2"
#|   - "3"
#| out-width: "100%"
#| label: "m-spillover"
#| fig-show: "hold"

m_spillover <- feglm(perYear ~
  new_senator  | Year + District,
cluster = "District",
data = dcounts_spillover)

# coefplot(m_spillover, horiz = T, drop = "(Intercept)", sub = "") 

m_spillover_proportion <- feglm(perYear ~
  new_proportion  | Year + District,
cluster = "District",
data = dcounts_spillover |> filter(chamber == "Senate"))

# coefplot(m_spillover_proportion, horiz = T, drop = "(Intercept)", sub = "") 

m_spillover_new_one <- feglm(perYear ~
  new_one  | Year + District,
cluster = "District",
data = dcounts_spillover |> filter(chamber == "Senate"))

# coefplot(m_spillover_new_one, horiz = T, drop = "(Intercept)", sub = "") 

```

### Spillover Effect Tables

- Table: `tables/models_spillover.tex` 
- Models: `models/models_spillover.Rdata`

```{r models_spillover}
models_spillover <- list(
  "(1)" = m_spillover,
  "(2)" = m_spillover_proportion,
  "(3)" = m_spillover_new_one
)


rows <- tibble(
  term = c("Dependent variable", 
           "All districts",
           "Senate only"),
  `(1)` = c("Per year", 
            "✓", 
            ""),
  `(2)` =c("Per year", 
            "", 
           "✓"),
    `(3)` = c("Per year", 
            "", 
            "✓")
)



# Checkmarks for controls 
attr(rows, 'position') <- c(0, 9:11)



modelsummary(models_spillover,
             notes = list("Robust standard errors in parentheses, clustered by district.") ) 

# modelsummary::modelsummary(models_spillover, # stars = T, 
#              add_rows = rows,               
#              coef_map = cm, 
#              gof_map = gm, 
#              output = "latex",
#              notes = list(" Robust standard errors in parentheses, clustered by district.") ) %>% 
#   # format to match stata output (sort of)
#   format_table() %>%
#    write_lines(file = here::here("docs", "tables", "models_spillover.tex") )



save(models_spillover, rows, cm, gm, coef_omit, #beta, se,
     file = here::here("models", "models_spillover.Rdata"))
```


